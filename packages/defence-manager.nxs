{
    "type": "group",
    "items": [
        {
            "type": "function",
            "items": [],
            "actions": [],
            "name": "onLoad",
            "enabled": true,
            "id": 2,
            "code": "(function () {\n    client.defencemanager = {\n        defences: {\n            nightsight: {\n                name: 'nightsight',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'vision',\n                        activate: {\n                            command: 'nightsight',\n                            causesBalance: false,\n                            needsBalance: false\n                        },\n                        deactivate: {\n                            command: 'relax nightsight',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            },\n            vigilance: {\n                name: 'vigilance',\n                type: 'draining',\n                skills: [\n                    {\n                        skill: 'vision',\n                        activate: {\n                            command: 'vigilance',\n                            causesBalance: false,\n                            needsBalance: true\n                        },\n                        deactivate: {\n                            command: 'relax vigilance',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            },\n            treewatch: {\n                name: 'treewatch',\n                type: 'draining',\n                skills: [\n                    {\n                        skill: 'vision',\n                        activate: {\n                            command: 'treewatch',\n                            causesBalance: false,\n                            needsBalance: false\n                        },\n                        deactivate: {\n                            command: 'relax treewatch',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            },\n            deathsight: {\n                name: 'deathsight',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'vision',\n                        activate: {\n                            command: 'deathsight',\n                            causesBalance: false,\n                            needsBalance: false\n                        },\n                        deactivate: {\n                            command: 'relax deathsight',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            },\n            skywatch: {\n                name: 'skywatch',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'vision',\n                        activate: {\n                            command: 'skywatch',\n                            causesBalance: false,\n                            needsBalance: false\n                        },\n                        deactivate: {\n                            command: 'relax skywatch',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            },\n            groundwatch: {\n                name: 'groundwatch',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'vision',\n                        activate: {\n                            command: 'groundwatch',\n                            causesBalance: false,\n                            needsBalance: false\n                        },\n                        deactivate: {\n                            command: 'relax groundwatch',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            },\n            hypersight: {\n                name: 'hypersight',\n                type: 'draining',\n                skills: [\n                    {\n                        skill: 'vision',\n                        activate: {\n                            command: 'hypersight',\n                            causesBalance: true,\n                            needsBalance: true\n                        },\n                        deactivate: {\n                            command: 'relax hypersight',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            },\n            thirdeye: {\n                name: 'thirdeye',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'vision',\n                        activate: {\n                            command: 'thirdeye',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            },\n            telesense: {\n                name: 'telesense',\n                type: 'draining',\n                skills: [\n                    {\n                        skill: 'vision',\n                        activate: {\n                            command: 'telesense',\n                            causesBalance: false,\n                            needsBalance: false\n                        },\n                        deactivate: {\n                            command: 'relax telesense',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            },\n            softfocus: {\n                name: 'softfocusing',\n                type: 'draining',\n                skills: [\n                    {\n                        skill: 'vision',\n                        activate: {\n                            command: 'softfocus',\n                            causesBalance: false,\n                            needsBalance: false\n                        },\n                        deactivate: {\n                            command: 'relax softfocus',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            },\n            firefly: {\n                name: '',\n                type: 'timed',\n                skills: [\n                    {\n                        skill: 'tattoos',\n                        activate: {\n                            command: 'touch firefly',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            moss: {\n                name: 'mosstattoo',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'tattoos',\n                        activate: {\n                            command: 'touch moss',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            shield: {\n                name: 'shield',\n                type: 'temporary',\n                skills: [\n                    {\n                        skill: 'tattoos',\n                        activate: {\n                            command: 'touch shield',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            mindseye: {\n                name: 'mindseye',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'tattoos',\n                        activate: {\n                            command: 'touch mindseye',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            cloak: {\n                name: 'cloak',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'tattoos',\n                        activate: {\n                            command: 'touch cloak',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            bell: {\n                name: '',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'tattoos',\n                        activate: {\n                            command: 'touch bell',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            moon: {\n                name: 'moontattoo',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'tattoos',\n                        activate: {\n                            command: 'touch moon',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            starburst: {\n                name: '',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'tattoos',\n                        activate: {\n                            command: 'touch starburst',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            boar: {\n                name: 'boartattoo',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'tattoos',\n                        activate: {\n                            command: 'touch boar',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            megalith: {\n                name: 'megalithtattoo',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'tattoos',\n                        activate: {\n                            command: 'touch megalith',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            ox: {\n                name: 'oxtattoo',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'tattoos',\n                        activate: {\n                            command: 'touch ox',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            chameleon: {\n                name: '',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'tattoos',\n                        activate: {\n                            command: 'touch chameleon @tar',\n                            causesBalance: true,\n                            needsBalance: true\n                        },\n                        deactivate: {\n                            command: 'touch chameleon @self',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            selfishness: {\n                name: 'selfishness',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'survival',\n                        activate: {\n                            command: 'selfishness',\n                            causesBalance: true,\n                            needsBalance: true\n                        },\n                        deactivate: {\n                            command: 'generosity',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            metawake: {\n                name: 'metawake',\n                type: 'draining',\n                skills: [\n                    {\n                        skill: 'survival',\n                        activate: {\n                            command: 'metawake',\n                            causesBalance: true,\n                            needsBalance: true\n                        },\n                        deactivate: {\n                            command: 'relax metawake',\n                            causesBalance: false,\n                            needsBalance: false\n                        },\n                    }\n                ]\n            },\n            insomnia: {\n                name: 'insomnia',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'survival',\n                        activate: {\n                            command: 'insomnia',\n                            causesBalance: false,\n                            needsBalance: false\n                        },\n                        deactivate: {\n                            command: 'relax insomnia',\n                            causesBalance: false,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            clinging: {\n                name: 'clinging',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'survival',\n                        activate: {\n                            command: 'clinging',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            breathing: {\n                name: 'heldbreath',\n                type: 'temporary',\n                skills: [\n                    {\n                        skill: 'survival',\n                        activate: {\n                            command: 'hold breath',\n                            causesBalance: true,\n                            needsBalance: false\n                        },\n                        deactivate: {\n                            command: 'release',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            },\n            curseward: {\n                name: 'curseward',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'survival',\n                        activate: {\n                            command: 'curseward',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            parry: {\n                name: 'parrying \\((\\w+)\\)',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'weaponry',\n                        activate: {\n                            command: 'parry @tar',\n                            causesBalance: false,\n                            needsBalance: true\n                        },\n                        deactivate: {\n                            command: 'parry nothing',\n                            causesBalance: false,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            mount: {\n                name: '',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'riding',\n                        activate: {\n                            command: 'mount @mount',\n                            causesBalance: true,\n                            needsBalance: true\n                        },\n                        deactivate: {\n                            command: 'dismount',\n                            causesBalance: false,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            prismatic: {\n                name: 'prismatic',\n                type: 'temporary',\n                skills: [\n                    {\n                        skill: 'items',\n                        activate: {\n                            command: 'strum lyre',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            slipperiness: {\n                name: 'slippery',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'pranks',\n                        activate: {\n                            command: 'slipperiness',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            balancing: {\n                name: 'balancing',\n                type: 'draining',\n                skills: [\n                    {\n                        skill: 'pranks',\n                        activate: {\n                            command: 'balancing',\n                            causesBalance: true,\n                            needsBalance: true\n                        },\n                        deactivate: {\n                            command: 'relax balancing',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            },\n            acrobatics: {\n                name: 'acrobatics',\n                type: 'draining',\n                skills: [\n                    {\n                        skill: 'pranks',\n                        activate: {\n                            command: 'acrobatics',\n                            causesBalance: true,\n                            needsBalance: true\n                        },\n                        deactivate: {\n                            command: 'relax acrobatics',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            },\n            arrowcatch: {\n                name: 'arrowcatching',\n                type: 'draining',\n                skills: [\n                    {\n                        skill: 'pranks',\n                        activate: {\n                            command: 'arrowcatch',\n                            causesBalance: true,\n                            needsBalance: true\n                        },\n                        deactivate: {\n                            command: 'relax arrowcatch',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            },\n            sun: {\n                name: '',\n                type: 'room',\n                skills: [\n                    {\n                        skill: 'tarot',\n                        activate: {\n                            command: 'outd sun|fling sun at ground',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            devil: {\n                name: '',\n                type: 'temporary',\n                skills: [\n                    {\n                        skill: 'tarot',\n                        activate: {\n                            command: 'outd devil|fling devil at ground',\n                            causesBalance: true,\n                            needsBalance: true\n                        }\n                    }\n                ]\n            },\n            gripping: {\n                name: 'gripping',\n                type: 'permanent',\n                skills: [\n                    {\n                        skill: 'puppetry',\n                        activate: {\n                            command: 'grip',\n                            causesBalance: false,\n                            needsBalance: true\n                        },\n                        deactivate: {\n                            command: 'relax grip',\n                            causesBalance: false,\n                            needsBalance: false\n                        }\n                    }\n                ]\n            }\n        },\n        currentDefenceIds: [],\n        expectedDefenceIds: [],\n        echo(text) {\n            client.displayservice.echo(`%white%[%deepskyblue%Defence Manager%end%]:%end% ${text}`);\n        },\n        error(text) {\n            client.defencemanager.echo(`%red%${text}`);\n        },\n        save() {\n            gmcp_save_system();\n            client.defencemanager.echo('Settings saved.');\n        }\n    };\n    client.gmcpservice.subscribe(['Char.Defences.List', 'Char.Defences.Add', 'Char.Defences.Remove'], args => {\n        run_function('defence-manager:onDefenceChange', args, 'Defence Manager');\n    });\n    client.defencemanager.echo('Loaded.');\n})(args);"
        }
    ],
    "actions": [],
    "name": "Defence Manager",
    "enabled": true,
    "id": 1,
    "description": "A Defence Manager"
}
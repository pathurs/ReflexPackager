{
    "type": "group",
    "items": [
        {
            "type": "group",
            "items": [
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 76
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'acrobatics', 'acrobatics off', ['used', 'off'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Off",
                                            "enabled": true,
                                            "id": 77,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You cease your acrobatic leaping and bouncing\\.$"
                                        },
                                        {
                                            "type": "group",
                                            "items": [
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'acrobatics', 'acrobatics on', ['used', 'on'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "On:0",
                                                    "enabled": true,
                                                    "id": 79,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You begin leaping and bouncing about, making it more difficult to hit you\\.$"
                                                },
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'acrobatics', 'acrobatics on', ['used', 'on'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "On:1",
                                                    "enabled": true,
                                                    "id": 80,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You are already bouncing around acrobatically\\.$"
                                                }
                                            ],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'acrobatics', 'acrobatics on', ['used', 'on'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "On",
                                            "enabled": true,
                                            "id": 78,
                                            "matching": "multitrigger",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": ""
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 81
                                }
                            ],
                            "actions": [],
                            "name": "Acrobatics",
                            "enabled": true,
                            "id": 82
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 83
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^An arrow flies in towards you\\.$/,\n    /^You reach out and nimbly pluck the arrow from the air\\.$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'arrowcatch', 'arrowcatch on', ['caught'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Caught",
                                            "enabled": true,
                                            "id": 84,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^An arrow flies in towards you\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'arrowcatch', 'arrowcatch on', ['used', 'off'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Off",
                                            "enabled": true,
                                            "id": 85,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You've turned off arrowcatching\\.$"
                                        },
                                        {
                                            "type": "group",
                                            "items": [
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'arrowcatch', 'arrowcatch on', ['used', 'on'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "On:0",
                                                    "enabled": true,
                                                    "id": 87,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You have begun to look for arrows to pluck from the air\\.$"
                                                },
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'arrowcatch', 'arrowcatch on', ['used', 'on'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "On:1",
                                                    "enabled": true,
                                                    "id": 88,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You already have arrowcatching on\\.$"
                                                }
                                            ],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'arrowcatch', 'arrowcatch on', ['used', 'on'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "On",
                                            "enabled": true,
                                            "id": 86,
                                            "matching": "multitrigger",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": ""
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 89
                                }
                            ],
                            "actions": [],
                            "name": "Arrowcatch",
                            "enabled": true,
                            "id": 90
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 91
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 92
                                }
                            ],
                            "actions": [],
                            "name": "Backflip",
                            "enabled": true,
                            "id": 93
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 94
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You launch yourself from the back of your mount and flip away from the area\\.$/,\n    /^You flip into a backwards handspring to the ([a-z]+), and strike ([A-Z][a-z]+) on the way out\\.$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'backhandspring', 'backhandspring', ['used', 'success', 'hit'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Mounted Used Success Hit",
                                            "enabled": true,
                                            "id": 95,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You launch yourself from the back of your mount and flip away from the area\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You launch yourself from the back of your mount and flip away from the area\\.$/,\n    /^You flip into a backwards handspring to the ([a-z]+) and miss ([A-Z][a-z]+) on the way out\\.$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'backhandspring', 'backhandspring', ['used', 'success', 'miss'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Mounted Used Success Miss",
                                            "enabled": true,
                                            "id": 96,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You launch yourself from the back of your mount and flip away from the area\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'backhandspring', 'backhandspring', ['used', 'fail'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Used Fail",
                                            "enabled": true,
                                            "id": 97,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You can not handspring in that direction\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You spring into the air with a flip away from the area\\.$/,\n    /^You flip into a backwards handspring to the ([a-z]+), and strike ([A-Z][a-z]+) on the way out\\.$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'backhandspring', 'backhandspring', ['used', 'success', 'hit'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Success Hit",
                                            "enabled": true,
                                            "id": 98,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You spring into the air with a flip away from the area\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You spring into the air with a flip away from the area\\.$/,\n    /^You flip into a backwards handspring to the ([a-z]+) and miss ([A-Z][a-z]+) on the way out\\.$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'backhandspring', 'backhandspring', ['used', 'success', 'miss'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Success Miss",
                                            "enabled": true,
                                            "id": 99,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You spring into the air with a flip away from the area\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 100
                                }
                            ],
                            "actions": [],
                            "name": "Backhandspring",
                            "enabled": true,
                            "id": 101
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 102
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 103
                                }
                            ],
                            "actions": [],
                            "name": "Badjoke",
                            "enabled": true,
                            "id": 104
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 105
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'arrowcatch', 'arrowcatch on', ['used', 'off'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Off",
                                            "enabled": true,
                                            "id": 106,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You cease to balance on the balls of your feet\\.$"
                                        },
                                        {
                                            "type": "group",
                                            "items": [
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'arrowcatch', 'arrowcatch on', ['used', 'on'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "On:0",
                                                    "enabled": true,
                                                    "id": 108,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You move onto the balls of your feet and begin to concentrate on balance\\.$"
                                                },
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'arrowcatch', 'arrowcatch on', ['used', 'on'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "On:1",
                                                    "enabled": true,
                                                    "id": 109,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You're already balancing\\.$"
                                                }
                                            ],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'arrowcatch', 'arrowcatch on', ['used', 'on'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "On",
                                            "enabled": true,
                                            "id": 107,
                                            "matching": "multitrigger",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": ""
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 110
                                }
                            ],
                            "actions": [],
                            "name": "Balancing",
                            "enabled": true,
                            "id": 111
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 112
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'balloonhandoff', 'inflate balloon and give to', 'fly', args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Balloonhandoff - Fly",
                                            "enabled": true,
                                            "id": 113,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^([A-Z][a-z]+) is swiftly and unexpectedly carried up into the sky!$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'balloonhandoff', 'inflate balloon and give to', ['used', 'start'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Balloonhandoff - Used Start",
                                            "enabled": true,
                                            "id": 114,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You inflate a balloon and give it to ([A-Z][a-z]+)\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 115
                                }
                            ],
                            "actions": [],
                            "name": "Balloonhandoff",
                            "enabled": true,
                            "id": 116
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 117
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "group",
                                            "items": [
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'balloons', 'inflate balloon', ['end'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "End:0",
                                                    "enabled": true,
                                                    "id": 119,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^Your balloon attempts to tug you into the sky, but cannot lift your weight and pops from the strain!$"
                                                },
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'balloons', 'inflate balloon', ['end'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "End:1",
                                                    "enabled": true,
                                                    "id": 120,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^Your balloon pops!$"
                                                }
                                            ],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'balloons', 'inflate balloon', ['end'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "End",
                                            "enabled": true,
                                            "id": 118,
                                            "matching": "multitrigger",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": ""
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'balloons', 'inflate balloon', ['fly'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Fly",
                                            "enabled": true,
                                            "id": 121,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You are swiftly and unexpectedly carried up into the sky by the balloon!$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'balloons', 'inflate balloon', ['used', 'success', 'start', 'fly'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Used Fly",
                                            "enabled": true,
                                            "id": 122,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You quickly inflate a balloon, and grab onto its string so that it carries you with it as it floats into the sky\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'balloons', 'inflate balloon', ['used', 'success', 'start'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Used No Fly",
                                            "enabled": true,
                                            "id": 123,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You inflate a balloon but do not float any higher\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 124
                                }
                            ],
                            "actions": [],
                            "name": "Balloons",
                            "enabled": true,
                            "id": 125
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 126
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 127
                                }
                            ],
                            "actions": [],
                            "name": "Bananas",
                            "enabled": true,
                            "id": 128
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 129
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You give ([A-Z][a-z]+) a sound thumping with your blackjack\\.$/,\n    /^The attack rebounds back onto you!$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'bop', 'bop', ['used', 'fail', 'rebound'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Fail Rebound 1",
                                            "enabled": true,
                                            "id": 130,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You give ([A-Z][a-z]+) a sound thumping with your blackjack\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You reach out and bop ([A-Z][a-z]+) on the nose with your blackjack\\.$/,\n    /^The attack rebounds back onto you!$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'bop', 'bop', ['used', 'fail', 'rebound'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Fail Rebound 2",
                                            "enabled": true,
                                            "id": 131,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You reach out and bop ([A-Z][a-z]+) on the nose with your blackjack\\.$"
                                        },
                                        {
                                            "type": "group",
                                            "items": [
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'bop', 'bop', ['used', 'success'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Used Success:0",
                                                    "enabled": true,
                                                    "id": 133,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You reach out and bop ([A-Z][a-z]+) on the nose with your blackjack\\.$"
                                                },
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'bop', 'bop', ['used', 'success'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Used Success:1",
                                                    "enabled": true,
                                                    "id": 134,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You give ([A-Z][a-z]+) a sound thumping with your blackjack\\.$"
                                                }
                                            ],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'bop', 'bop', ['used', 'success'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Used Success",
                                            "enabled": true,
                                            "id": 132,
                                            "matching": "multitrigger",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": ""
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 135
                                }
                            ],
                            "actions": [],
                            "name": "Bop",
                            "enabled": true,
                            "id": 136
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 137
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 138
                                }
                            ],
                            "actions": [],
                            "name": "Butterflybomb",
                            "enabled": true,
                            "id": 139
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 140
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 141
                                }
                            ],
                            "actions": [],
                            "name": "Concussionbomb",
                            "enabled": true,
                            "id": 142
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 143
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 144
                                }
                            ],
                            "actions": [],
                            "name": "Disarm",
                            "enabled": true,
                            "id": 145
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 146
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 147
                                }
                            ],
                            "actions": [],
                            "name": "Dustbomb",
                            "enabled": true,
                            "id": 148
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 149
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 150
                                }
                            ],
                            "actions": [],
                            "name": "Envenom",
                            "enabled": true,
                            "id": 151
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 152
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 153
                                }
                            ],
                            "actions": [],
                            "name": "Firecracker",
                            "enabled": true,
                            "id": 154
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 155
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^With a sinister grin, you begin a relentless onslaught of the blackest humour your genius can come up with, bombarding the tragically stoic ([A-Z][a-z]+) with your magnificent wit\\.$/,\n    /^Not even your brilliant display can crack the stoic greyface ([A-Z][a-z]+). A tough customer!/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'gallowshumour', 'gallowshumour', ['used', 'miss'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Miss",
                                            "enabled": true,
                                            "id": 158,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^With a sinister grin, you begin a relentless onslaught of the blackest humour your genius can come up with, bombarding the tragically stoic ([A-Z][a-z]+) with your magnificent wit\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'gallowshumour', 'gallowshumour', ['used', 'fail', 'no puppet'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Used Fail No Puppet",
                                            "enabled": true,
                                            "id": 156,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You are not wielding a puppet of ([A-Z][a-z]+): why waste your magnificent wit on such a droll audience\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^With a sinister grin, you begin a relentless onslaught of the blackest humour your genius can come up with, bombarding the tragically stoic ([A-Z][a-z]+) with your magnificent wit\\.$/,\n    /^A nearly perfect puppet of ([A-Z][a-z]+) trembles under your fingers as you coax out some character from that oh so stoic greyface ([A-Z][a-z]+)\\.$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'gallowshumour', 'gallowshumour', ['used', 'hit'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Hit",
                                            "enabled": true,
                                            "id": 157,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^With a sinister grin, you begin a relentless onslaught of the blackest humour your genius can come up with, bombarding the tragically stoic ([A-Z][a-z]+) with your magnificent wit\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 159
                                }
                            ],
                            "actions": [],
                            "name": "Gallowshumour",
                            "enabled": true,
                            "id": 160
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 161
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'giraffes', 'dismount giraffe', ['used', 'success'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Dismount Giraffe - Used Success",
                                            "enabled": true,
                                            "id": 162,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You step down off of a [a-z]+ balloon twisted into a giraffe\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'giraffes', 'drop giraffe', ['used', 'success'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Drop Giraffe - Used Success",
                                            "enabled": true,
                                            "id": 163,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You drop a [a-z]+ balloon twisted into a giraffe\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'giraffes', 'inflate balloon into giraffe', ['used', 'success'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Inflate Balloon Into Giraffe - Used Success",
                                            "enabled": true,
                                            "id": 164,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You inflate your balloon and start twisting and shaping it. When you are finished it is shaped as a nearly life-sized giraffe!$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'giraffes', 'mount giraffe', ['used', 'success'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Mount Giraffe - Used Success",
                                            "enabled": true,
                                            "id": 165,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You climb up on a [a-z]+ balloon twisted into a giraffe\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'giraffes', 'step into trees', ['used', 'success'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Step Into Trees - Used Success",
                                            "enabled": true,
                                            "id": 166,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You step off your giraffe into the trees\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 167
                                }
                            ],
                            "actions": [],
                            "name": "Giraffes",
                            "enabled": true,
                            "id": 168
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 169
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 170
                                }
                            ],
                            "actions": [],
                            "name": "Graffiti",
                            "enabled": true,
                            "id": 171
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 172
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 173
                                }
                            ],
                            "actions": [],
                            "name": "Handspring",
                            "enabled": true,
                            "id": 174
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 175
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 176
                                }
                            ],
                            "actions": [],
                            "name": "Hocuspocus",
                            "enabled": true,
                            "id": 177
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 178
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'itchpowder', 'slip itchpowder', 'hit', args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Hit",
                                            "enabled": true,
                                            "id": 179,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^([A-Z][a-z]+) suddenly starts scratching at an itch like mad\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'itchpowder', 'slip itchpowder', ['used', 'start'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Used Start",
                                            "enabled": true,
                                            "id": 180,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You quickly slip ([A-Z][a-z]+) some itching powder\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 181
                                }
                            ],
                            "actions": [],
                            "name": "Itchpowder",
                            "enabled": true,
                            "id": 182
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 183
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 184
                                }
                            ],
                            "actions": [],
                            "name": "Jackinthebox",
                            "enabled": true,
                            "id": 185
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 186
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 187
                                }
                            ],
                            "actions": [],
                            "name": "Juggling",
                            "enabled": true,
                            "id": 188
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 189
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'liberate', undefined, ['stutter', 'stutterfour', 'stutterdone'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Stutter Four",
                                            "enabled": true,
                                            "id": 190,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^The time is now! You can reach out and pluck the tongue of ([A-Z][a-z]+) right out of (?:his|her) mouth!$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'liberate', undefined, ['stutter', 'stutterone'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Stutter One",
                                            "enabled": true,
                                            "id": 191,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You cast your eye over the wagging tongue of ([A-Z][a-z]+), awaiting your moment\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'liberate', undefined, ['stutter', 'stutterthree'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Stutter Three",
                                            "enabled": true,
                                            "id": 192,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You sense your moment grows near as the tongue of ([A-Z][a-z]+) continues to flap\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'liberate', undefined, ['stutter', 'stuttertwo'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Stutter Two",
                                            "enabled": true,
                                            "id": 193,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You watch intently as the tongue of ([A-Z][a-z]+) wags back and forth\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'liberate', 'liberate tongue of', ['used', 'miss'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Used Miss",
                                            "enabled": true,
                                            "id": 194,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You dart your hand out towards the face of ([A-Z][a-z]+), but (?:he|she) ducks back\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 195
                                }
                            ],
                            "actions": [],
                            "name": "Liberate",
                            "enabled": true,
                            "id": 196
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 197
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'mickey', undefined, ['hit', 'end'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Hit End",
                                            "enabled": true,
                                            "id": 198,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^([A-Z][a-z]+) pops a mickey into (?:his|her) mouth\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'mickey', 'slip mickey', ['used', 'success', 'start'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Used Success Start",
                                            "enabled": true,
                                            "id": 199,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You quickly slip ([A-Z][a-z]+) a mickey\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 200
                                }
                            ],
                            "actions": [],
                            "name": "Mickey",
                            "enabled": true,
                            "id": 201
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 202
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /Prop            Current stock   Maximum stock  /,\n    /-------------------------------------------------------------------------------/,\n    /Balloon\\s+(\\d+)\\s+(\\d+)/,\n    /Itchpowder\\s+(\\d+)\\s+(\\d+)/,\n    /Mickey\\s+(\\d+)\\s+(\\d+)/,\n    /-------------------------------------------------------------------------------/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'props', 'props', 'used', args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Props",
                                            "enabled": true,
                                            "id": 203,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "Prop            Current stock   Maximum stock  "
                                        },
                                        {
                                            "type": "group",
                                            "items": [
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'props', 'wish for balloon', ['used', 'success'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Wish For Balloon Used Success:0",
                                                    "enabled": true,
                                                    "id": 205,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You throw a golden cube up into the air, and down comes a balloon\\.$"
                                                },
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'props', 'wish for balloon', ['used', 'success'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Wish For Balloon Used Success:1",
                                                    "enabled": true,
                                                    "id": 206,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You throw a golden cube up into the air, and down comes a bunch of balloons\\.$"
                                                }
                                            ],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'props', 'wish for balloon', ['used', 'success'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Wish For Balloon Used Success",
                                            "enabled": true,
                                            "id": 204,
                                            "matching": "multitrigger",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": ""
                                        },
                                        {
                                            "type": "group",
                                            "items": [
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'props', 'wish for itchpowder', ['used', 'success'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Wish For Itchpowder Used Success:0",
                                                    "enabled": true,
                                                    "id": 208,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You toss a golden cube in the air, and down comes a packet of itchpowder\\.$"
                                                },
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'props', 'wish for itchpowder', ['used', 'success'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Wish For Itchpowder Used Success:1",
                                                    "enabled": true,
                                                    "id": 209,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You toss a golden cube in the air, and down comes several packets of itchpowder\\.$"
                                                }
                                            ],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'props', 'wish for itchpowder', ['used', 'success'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Wish For Itchpowder Used Success",
                                            "enabled": true,
                                            "id": 207,
                                            "matching": "multitrigger",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": ""
                                        },
                                        {
                                            "type": "group",
                                            "items": [
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'props', 'wish for mickey', ['used', 'success'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Wish For Mickey Used Success:0",
                                                    "enabled": true,
                                                    "id": 211,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^With a flourish, you throw a golden cube into the air, and down comes a mickey\\.$"
                                                },
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'props', 'wish for mickey', ['used', 'success'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Wish For Mickey Used Success:1",
                                                    "enabled": true,
                                                    "id": 212,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^With a flourish, you throw a golden cube into the air, and down comes a bunch of mickeys\\.$"
                                                }
                                            ],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'props', 'wish for mickey', ['used', 'success'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Wish For Mickey Used Success",
                                            "enabled": true,
                                            "id": 210,
                                            "matching": "multitrigger",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": ""
                                        },
                                        {
                                            "type": "group",
                                            "items": [
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'props', 'wish for', ['used', 'fail'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Wish For Used Fail:0",
                                                    "enabled": true,
                                                    "id": 214,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You cannot hold any more of that type of prop\\.$"
                                                },
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'props', 'wish for', ['used', 'fail'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Wish For Used Fail:1",
                                                    "enabled": true,
                                                    "id": 215,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You can only wish for up to (\\d+) more of that prop currently\\.$"
                                                }
                                            ],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'props', 'wish for', ['used', 'fail'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Wish For Used Fail",
                                            "enabled": true,
                                            "id": 213,
                                            "matching": "multitrigger",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": ""
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 216
                                }
                            ],
                            "actions": [],
                            "name": "Props",
                            "enabled": true,
                            "id": 217
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 218
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'runaway', 'runaway', ['used', 'success'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Used Success",
                                            "enabled": true,
                                            "id": 219,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You kick your giraffe in the haunches and scream, \"RUN AWAY! RUN AWAY!\"$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 220
                                }
                            ],
                            "actions": [],
                            "name": "Runaway",
                            "enabled": true,
                            "id": 221
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 222
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "group",
                                            "items": [
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'slipperiness', 'slipperiness', ['used', 'success'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Used Success:0",
                                                    "enabled": true,
                                                    "id": 224,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You're quite the slippery little fellow aren't you\\?$"
                                                },
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'slipperiness', 'slipperiness', ['used', 'success'], args);\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Used Success:1",
                                                    "enabled": true,
                                                    "id": 225,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You're already quite slippery\\.$"
                                                }
                                            ],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'slipperiness', 'slipperiness', ['used', 'success'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Used Success",
                                            "enabled": true,
                                            "id": 223,
                                            "matching": "multitrigger",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": ""
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 226
                                }
                            ],
                            "actions": [],
                            "name": "Slipperiness",
                            "enabled": true,
                            "id": 227
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 228
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 229
                                }
                            ],
                            "actions": [],
                            "name": "Smokebomb",
                            "enabled": true,
                            "id": 230
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 231
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 232
                                }
                            ],
                            "actions": [],
                            "name": "Somersault",
                            "enabled": true,
                            "id": 233
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 234
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 235
                                }
                            ],
                            "actions": [],
                            "name": "Suicidemice",
                            "enabled": true,
                            "id": 236
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 237
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 238
                                }
                            ],
                            "actions": [],
                            "name": "Timers",
                            "enabled": true,
                            "id": 239
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 240
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 241
                                }
                            ],
                            "actions": [],
                            "name": "Traps",
                            "enabled": true,
                            "id": 242
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 243
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('pranks', 'vent', 'vent', ['used', 'hit'], args);\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Used Hit",
                                            "enabled": true,
                                            "id": 244,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Drawing upon all of your contempt for the stoic and the dull, you viciously smack ([A-Z][a-z]+) about the chops\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 245
                                }
                            ],
                            "actions": [],
                            "name": "Vent",
                            "enabled": true,
                            "id": 246
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 247
                                },
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 248
                                }
                            ],
                            "actions": [],
                            "name": "Webbomb",
                            "enabled": true,
                            "id": 249
                        }
                    ],
                    "actions": [],
                    "name": "Pranks",
                    "enabled": true,
                    "id": 250
                },
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "const amount = Number(args[1]);\r\n        const card = args[2];\r\n        if (!client.skillManager.skills.class.tarot.cards.includes(card)) {\r\n            client.skillManager.error(`Unknown tarot card '${card}'.`);\r\n            return;\r\n        }\r\n        if (!amount || amount < 0) {\r\n            client.skillManager.error(`Unexpected amount '${amount}'.`);\r\n            return;\r\n        }\r\n        client.skillManager.skills.class.tarot.inscribing.queue[card] += amount;\r\n        const total = client.skillManager.skills.class.tarot.inscribing.queue[card];\r\n        client.skillManager.echo(`Added %lightgray%${amount} ${card} ${amount > 1 ? 'cards' : 'card'}%end% to inscribing queue, to make a total of %lightgray%${total} ${card} ${total > 1 ? 'cards' : 'card'}%end%.`);\r\n        if (!client.skillManager.skills.class.tarot.inscribing.active) {\r\n            client.skillManager.skills.class.tarot.inscribing.start();\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "Inscribe",
                                    "enabled": true,
                                    "id": 251,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": false,
                                    "prefix_suffix": true,
                                    "text": "^inscribe (\\d+) (\\w+)$"
                                },
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "client.skillManager.skills.class.tarot.inscribing.reset();\r\n        client.skillManager.skills.class.tarot.inscribing.stop();\r\n    "
                                        }
                                    ],
                                    "name": "Inscribe Clear",
                                    "enabled": true,
                                    "id": 253,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": false,
                                    "prefix_suffix": true,
                                    "text": "^inscribe clear$"
                                },
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "client.skillManager.skills.class.tarot.inscribing.stop();\r\n    "
                                        }
                                    ],
                                    "name": "Inscribe Stop",
                                    "enabled": true,
                                    "id": 252,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": false,
                                    "prefix_suffix": true,
                                    "text": "^inscribe stop$"
                                }
                            ],
                            "actions": [],
                            "name": "Aliases",
                            "enabled": true,
                            "id": 254
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "if (client.skillManager.skills.class.tarot.active) {\r\n            client.skillManager.onAbility('tarot', 'CHANGEME', 'CHANGEME', 'CHANGEME', args);\r\n        }\r\n        if (client.skillManager.skills.class.tarot.inscribing.active) {\r\n            gag_current_line();\r\n            client.skillManager.error('Inscribing failed!');\r\n            client.skillManager.skills.class.tarot.inscribing.runningQueue = false;\r\n            client.skillManager.skills.class.tarot.inscribing.runQueue();\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "Inscribe Failed",
                                    "enabled": true,
                                    "id": 255,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^Your concentration ruined, you throw away the half-finished and now worthless tarot\\.$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "if (client.skillManager.skills.class.tarot.active) {\r\n            client.skillManager.onAbility('tarot', 'CHANGEME', 'CHANGEME', 'CHANGEME', args);\r\n        }\r\n        let card = client.skillManager.skills.class.tarot.descriptionDictionary[args[1]];\r\n        client.systemService.sendCommand(`ind ${client.skillManager.skills.class.tarot.inscribing.amount} ${card}`);\r\n        if (client.skillManager.skills.class.tarot.inscribing.active) {\r\n            gag_current_line();\r\n            client.skillManager.echo('%lime%Inscribing Successful!');\r\n            client.skillManager.skills.class.tarot.inscribing.queue[card] = Math.max(client.skillManager.skills.class.tarot.inscribing.queue[card] - client.skillManager.skills.class.tarot.inscribing.amount, 0);\r\n            client.skillManager.skills.class.tarot.inscribing.runningQueue = false;\r\n            client.skillManager.skills.class.tarot.inscribing.runQueue();\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "Inscribed",
                                    "enabled": true,
                                    "id": 256,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^You have successfully inscribed the image of (?:the )?([\\w\\W]+) on your Tarot card\\.$"
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.tarot.active) {\r\n            client.skillManager.onAbility('tarot', 'CHANGEME', 'CHANGEME', 'CHANGEME', args);\r\n        }\r\n        if (client.skillManager.skills.class.tarot.inscribing.active) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Inscribing:0",
                                            "enabled": true,
                                            "id": 258,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Wisely preparing yourself beforehand, you lay out the quill and various inks you will need to inscribe the sign of (?:the )?([\\w\\W]+) into your card\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.tarot.active) {\r\n            client.skillManager.onAbility('tarot', 'CHANGEME', 'CHANGEME', 'CHANGEME', args);\r\n        }\r\n        if (client.skillManager.skills.class.tarot.inscribing.active) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Inscribing:1",
                                            "enabled": true,
                                            "id": 259,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Focusing your mind on the task ahead, you block out all extraneous thoughts\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.tarot.active) {\r\n            client.skillManager.onAbility('tarot', 'CHANGEME', 'CHANGEME', 'CHANGEME', args);\r\n        }\r\n        if (client.skillManager.skills.class.tarot.inscribing.active) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Inscribing:2",
                                            "enabled": true,
                                            "id": 260,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You take up the quill and begin to trace the outline of (?:the )?([\\w\\W]+) with careful precision\\. The slightest mistake will render the card useless\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.tarot.active) {\r\n            client.skillManager.onAbility('tarot', 'CHANGEME', 'CHANGEME', 'CHANGEME', args);\r\n        }\r\n        if (client.skillManager.skills.class.tarot.inscribing.active) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Inscribing:3",
                                            "enabled": true,
                                            "id": 261,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Finishing the outline, you begin to colour (?:the )?([\\w\\W]+) properly, utilising just the right amount of hue here, the perfect amount of saturation there\\.$"
                                        }
                                    ],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "if (client.skillManager.skills.class.tarot.active) {\r\n            client.skillManager.onAbility('tarot', 'CHANGEME', 'CHANGEME', 'CHANGEME', args);\r\n        }\r\n        if (client.skillManager.skills.class.tarot.inscribing.active) {\r\n            gag_current_line();\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "Inscribing",
                                    "enabled": true,
                                    "id": 257,
                                    "matching": "multitrigger",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": ""
                                }
                            ],
                            "actions": [],
                            "name": "Triggers",
                            "enabled": true,
                            "id": 262
                        }
                    ],
                    "actions": [],
                    "name": "Tarot",
                    "enabled": true,
                    "id": 263
                },
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [],
                            "actions": [],
                            "name": "Aliases",
                            "enabled": true,
                            "id": 264
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You kick your leg high and scythe downwards at (\\w+)\\.$/,\n    /^You connect to the ([\\w\\W]+)!$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('tekura', 'axe', 'axe', ['used', 'hit'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Hit",
                                            "enabled": true,
                                            "id": 265,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You kick your leg high and scythe downwards at (\\w+)\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Axe",
                                    "enabled": true,
                                    "id": 266
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You ball up one fist and hammerfist ([A-Z][a-z]+)\\.$/,\n    /^You connect to the ([\\w\\W]+)!$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('tekura', 'hammerfist', 'hammerfist', ['used', 'hit'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Hit",
                                            "enabled": true,
                                            "id": 267,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You ball up one fist and hammerfist ([A-Z][a-z]+)\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Hammerfist",
                                    "enabled": true,
                                    "id": 268
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You unleash a powerful hook towards (\\w+)\\.$/,\n    /^You connect to the ([\\w\\W]+)!$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('tekura', 'hook', 'hook', ['used', 'hit'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Hit",
                                            "enabled": true,
                                            "id": 269,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You unleash a powerful hook towards (\\w+)\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Hook",
                                    "enabled": true,
                                    "id": 270
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You hurl yourself towards (\\w+) with a lightning\\-fast moon kick\\.$/,\n    /^You connect to the ([\\w\\W]+)!$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('tekura', 'moonkick', 'uppercut', ['used', 'hit'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Hit",
                                            "enabled": true,
                                            "id": 271,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You hurl yourself towards (\\w+) with a lightning\\-fast moon kick\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Moonkick",
                                    "enabled": true,
                                    "id": 272
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You pump out at (\\w+) with a powerful side kick\\.$/,\n    /^You connect to the ([\\w\\W]+)!$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('tekura', 'sidekick', 'sidekick', ['used', 'hit'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Hit",
                                            "enabled": true,
                                            "id": 273,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You pump out at (\\w+) with a powerful side kick\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Sidekick",
                                    "enabled": true,
                                    "id": 274
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You let fly at (\\w+) with a snap kick\\.$/,\n    /^You connect to the ([\\w\\W]+)!$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('tekura', 'snapkick', 'snapkick', ['used', 'hit'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Hit",
                                            "enabled": true,
                                            "id": 275,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You let fly at (\\w+) with a snap kick\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Snapkick",
                                    "enabled": true,
                                    "id": 276
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You form a spear hand and stab out towards (\\w+)\\.$/,\n    /^You connect to the ([\\w\\W]+)!$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('tekura', 'spear', 'spear', ['used', 'hit'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Hit",
                                            "enabled": true,
                                            "id": 277,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You form a spear hand and stab out towards (\\w+)\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Spear",
                                    "enabled": true,
                                    "id": 278
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You launch a powerful uppercut at (\\w+)\\.$/,\n    /^You connect to the ([\\w\\W]+)!$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('tekura', 'uppercut', 'uppercut', ['used', 'hit'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Hit",
                                            "enabled": true,
                                            "id": 279,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You launch a powerful uppercut at (\\w+)\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Uppercut",
                                    "enabled": true,
                                    "id": 280
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "\n    var regExpArray = [\n        /^You spin into the air and throw a whirlwind kick towards (\\w+)\\.$/,\n    /^You connect to the ([\\w\\W]+)!$/\n    ];\n\n    var indexOffset = current_block.indexOf(current_line);\n    var lastIndex =  indexOffset + regExpArray.length - 1;\n\n    // Override args\n    var args = {\n        matches: [],\n        block: current_block,\n        lines: []\n    };\n\n    var prompt = current_block[current_block.length - 1];\n\n    if (prompt.parsed_prompt) {\n        args.prompt = prompt;\n    }\n\n    for (let i = 0; i < regExpArray.length; i++) {\n        const lineIndex = i + indexOffset;\n\n        if (!current_block[lineIndex] || !current_block[lineIndex].parsed_line) {\n            break;\n        }\n\n        var currentRegExp = regExpArray[i];\n        var currentText = current_block[lineIndex].parsed_line.text();\n\n        if (!currentRegExp.test(currentText)) {\n            break;\n        }\n\n        args.matches.push(currentText.match(currentRegExp));\n        args.lines.push(current_block[lineIndex]);\n\n        if (lineIndex === lastIndex) {\n            if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('tekura', 'whirlwind', 'whirlwind', ['used', 'hit'], args);\r\n        }\r\n    \n        }\n    }\n    "
                                                }
                                            ],
                                            "name": "Used Hit",
                                            "enabled": true,
                                            "id": 281,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You spin into the air and throw a whirlwind kick towards (\\w+)\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Whirlwind",
                                    "enabled": true,
                                    "id": 282
                                }
                            ],
                            "actions": [],
                            "name": "Triggers",
                            "enabled": true,
                            "id": 283
                        }
                    ],
                    "actions": [],
                    "name": "Tekura",
                    "enabled": true,
                    "id": 284
                },
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 285
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('telepathy', 'fullsense', 'fullsense', ['person'], args);\r\n            const person = client.peopleManager.getPerson(args[1]);\r\n            const location = args[2];\r\n            const area = client.gmcpService.room.area;\r\n            // MOVE ME\r\n            if (person && client.peopleManager.isCityEnemy(person)) {\r\n                client.systemService.sendCommand(`pt Sensed City Enemy ${client.peopleManager.getDisplayName(person)} at '${location}' in '${area}'`);\r\n                if (client.peopleManager.you && client.peopleManager.you.city && client.peopleManager.you.city.toLowerCase() === area.toLowerCase()) {\r\n                    client.systemService.sendCommand(`pt Sensed City Enemy ${client.peopleManager.getDisplayName(person)} at '${location}' in '${area}'`);\r\n                }\r\n            }\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Person",
                                            "enabled": true,
                                            "id": 286,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You sense ([A-Z][a-z]+) at ([\\w\\W]+)\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 287
                                }
                            ],
                            "actions": [],
                            "name": "Fullsense",
                            "enabled": true,
                            "id": 288
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 289
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('telepathy', 'mindnet', 'mindnet', ['entered'], args);\r\n            const person = client.peopleManager.getPerson(args[1]);\r\n            const area = client.gmcpService.room.area;\r\n            // MOVE ME\r\n            if (person && client.peopleManager.isCityEnemy(person)) {\r\n                client.systemService.sendCommand(`pt Sensed City Enemy ${client.peopleManager.getDisplayName(person)} has entered '${area}'`);\r\n                if (client.peopleManager.you && client.peopleManager.you.city && client.peopleManager.you.city.toLowerCase() === area.toLowerCase()) {\r\n                    client.systemService.sendCommand(`armytell Sensed City Enemy ${client.peopleManager.getDisplayName(person)} has entered '${area}'`);\r\n                }\r\n            }\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Entered",
                                            "enabled": true,
                                            "id": 290,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^([A-Z][a-z]+) has entered the area\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.class.pranks.active) {\r\n            client.skillManager.onAbility('telepathy', 'mindnet', 'mindnet', ['left'], args);\r\n            const person = client.peopleManager.getPerson(args[1]);\r\n            const area = client.gmcpService.room.area;\r\n            // MOVE ME\r\n            if (person && client.peopleManager.isCityEnemy(person)) {\r\n                client.systemService.sendCommand(`pt Sensed City Enemy ${client.peopleManager.getDisplayName(person)} has left '${area}'`);\r\n                if (client.peopleManager.you && client.peopleManager.you.city && client.peopleManager.you.city.toLowerCase() === area.toLowerCase()) {\r\n                    client.systemService.sendCommand(`armytell Sensed City Enemy ${client.peopleManager.getDisplayName(person)} has left '${area}'`);\r\n                }\r\n            }\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Left",
                                            "enabled": true,
                                            "id": 291,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^([A-Z][a-z]+) has left the area\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 292
                                }
                            ],
                            "actions": [],
                            "name": "Mindnet",
                            "enabled": true,
                            "id": 293
                        }
                    ],
                    "actions": [],
                    "name": "Telepathy",
                    "enabled": true,
                    "id": 294
                }
            ],
            "actions": [],
            "name": "Class Skills",
            "enabled": true,
            "id": 295
        },
        {
            "type": "group",
            "items": [],
            "actions": [],
            "name": "General Skills",
            "enabled": true,
            "id": 296
        },
        {
            "type": "group",
            "items": [
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "const wasAutomatic = client.skillManager.skills.trade.collecting.automatic;\r\n        client.skillManager.skills.trade.collecting.automatic = !client.skillManager.skills.trade.collecting.automatic;\r\n        if (wasAutomatic) {\r\n            client.skillManager.echo(`Will no longer automatically start collecting in each room.`);\r\n        }\r\n        else {\r\n            client.skillManager.echo(`Will now automatically start collecting in each room.`);\r\n            client.skillManager.skills.trade.collecting.start();\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "Collect Automatically",
                                    "enabled": true,
                                    "id": 66,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": false,
                                    "prefix_suffix": true,
                                    "text": "^collect ?(?:auto|automatic|automatically)$"
                                },
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "client.skillManager.skills.trade.collecting.start();\r\n    "
                                        }
                                    ],
                                    "name": "Collect",
                                    "enabled": true,
                                    "id": 65,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": false,
                                    "prefix_suffix": true,
                                    "text": "^collect$"
                                }
                            ],
                            "actions": [],
                            "name": "Aliases",
                            "enabled": true,
                            "id": 67
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "client.skillManager.skills.trade.collecting.onMineral(args);\r\n    "
                                        }
                                    ],
                                    "name": "Minerals Mineral",
                                    "enabled": true,
                                    "id": 68,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^([\\w\\W]+)\\s+(?:Plentiful|Abundant|Moderate|Sparse)$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n            setTimeout(() => {\r\n                client.skillManager.skills.trade.collecting.waitingForMinerals = false;\r\n                client.skillManager.skills.trade.collecting.tryCollect();\r\n            });\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "Minerals Start",
                                    "enabled": true,
                                    "id": 69,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^You spot the following minerals here:$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n            setTimeout(() => {\r\n                client.skillManager.skills.trade.collecting.waitingForMinerals = false;\r\n                client.skillManager.skills.trade.collecting.tryCollect();\r\n            });\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "No Minerals",
                                    "enabled": true,
                                    "id": 70,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^There are no minerals here\\.$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "client.skillManager.skills.trade.collecting.onPlant(args);\r\n    "
                                        }
                                    ],
                                    "name": "Plants Plant",
                                    "enabled": true,
                                    "id": 71,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^(?:[\\w\\W]+) \\((\\w+)\\)\\s+(?:Plentiful|Abundant|Moderate|Sparse)$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n            setTimeout(() => {\r\n                client.skillManager.skills.trade.collecting.waitingForPlants = false;\r\n                client.skillManager.skills.trade.collecting.tryCollect();\r\n            });\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "Plants Start",
                                    "enabled": true,
                                    "id": 72,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^The following plants are growing in this room:$"
                                }
                            ],
                            "actions": [],
                            "name": "Triggers",
                            "enabled": true,
                            "id": 73
                        }
                    ],
                    "actions": [],
                    "name": "Collecting",
                    "enabled": true,
                    "id": 74
                },
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "alias",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "client.skillManager.skills.trade.gathering.butchering.start();\r\n    "
                                                }
                                            ],
                                            "name": "Butcher",
                                            "enabled": true,
                                            "id": 31,
                                            "matching": "regexp",
                                            "whole_words": true,
                                            "case_sensitive": false,
                                            "prefix_suffix": true,
                                            "text": "^butcher$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 32
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.gathering.butchering.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Butcher Failed",
                                            "enabled": true,
                                            "id": 29,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^As you set about butchering the corpse, you realise you have made a mistake and mutilated it beyond redemption\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "var _a;\r\n        if (client.skillManager.skills.trade.gathering.butchering.running) {\r\n            const amountMatch = args[1] || '';\r\n            const itemNameMatch = args[2];\r\n            const amount = ((_a = amountMatch.match(/(\\d+)/)) === null || _a === void 0 ? void 0 : _a[1]) || '1';\r\n            if (itemNameMatch in client.skillManager.skills.trade.gathering.butchering.descriptionDictionary) {\r\n                const item = client.skillManager.skills.trade.gathering.butchering.descriptionDictionary[itemNameMatch];\r\n                if (item) {\r\n                    client.systemService.sendCommand(`inrift ${amount} ${item}`);\r\n                }\r\n            }\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Butchered",
                                            "enabled": true,
                                            "id": 24,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Skilfully, you butcher the corpse of [\\w\\W]+, separating flesh from bone with your cleaver and preparing (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+)\\.$"
                                        },
                                        {
                                            "type": "group",
                                            "items": [
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.trade.gathering.butchering.running) {\r\n            gag_current_line();\r\n            client.skillManager.skills.trade.gathering.butchering.stop();\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Can't Butcher:0",
                                                    "enabled": true,
                                                    "id": 26,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^Butcher with what? Your fingernails\\?$"
                                                },
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.trade.gathering.butchering.running) {\r\n            gag_current_line();\r\n            client.skillManager.skills.trade.gathering.butchering.stop();\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Can't Butcher:1",
                                                    "enabled": true,
                                                    "id": 27,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^Butcher what\\?$"
                                                },
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "if (client.skillManager.skills.trade.gathering.butchering.running) {\r\n            gag_current_line();\r\n            client.skillManager.skills.trade.gathering.butchering.stop();\r\n        }\r\n    "
                                                        }
                                                    ],
                                                    "name": "Can't Butcher:2",
                                                    "enabled": true,
                                                    "id": 28,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You have no corpse suitable for butchering\\.$"
                                                }
                                            ],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.gathering.butchering.running) {\r\n            gag_current_line();\r\n            client.skillManager.skills.trade.gathering.butchering.stop();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Butcher",
                                            "enabled": true,
                                            "id": 25,
                                            "matching": "multitrigger",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": ""
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 30
                                }
                            ],
                            "actions": [],
                            "name": "Butchering",
                            "enabled": true,
                            "id": 33
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Gather:0",
                                            "enabled": true,
                                            "id": 7,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You carefully dig through the soft soil of the riverbed but are unable to find any suitable clay\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Gather:1",
                                            "enabled": true,
                                            "id": 8,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You carefully search the cracks and crevices of the surrounding rock, but find nothing\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Gather:2",
                                            "enabled": true,
                                            "id": 9,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Exactly where do you see farmland around here to gather from\\?"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Gather:3",
                                            "enabled": true,
                                            "id": 10,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You have already gathered from that plant recently\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Gather:4",
                                            "enabled": true,
                                            "id": 11,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^That plant has been fully harvested\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Gather:5",
                                            "enabled": true,
                                            "id": 12,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^What do you wish to harvest\\?"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Gather:6",
                                            "enabled": true,
                                            "id": 13,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^What would you like to gather\\?"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Gather:7",
                                            "enabled": true,
                                            "id": 14,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^This location will not yield \\w+\\.$"
                                        }
                                    ],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "Can't Gather",
                                    "enabled": true,
                                    "id": 6,
                                    "matching": "multitrigger",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": ""
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "client.skillManager.skills.trade.collecting.onCollected(args);\r\n    "
                                                }
                                            ],
                                            "name": "Gathered:0",
                                            "enabled": true,
                                            "id": 16,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You reach out and carefully harvest (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+)\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "client.skillManager.skills.trade.collecting.onCollected(args);\r\n    "
                                                }
                                            ],
                                            "name": "Gathered:1",
                                            "enabled": true,
                                            "id": 17,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Sifting through the soft riverbed with your fingers, you collect (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+)\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "client.skillManager.skills.trade.collecting.onCollected(args);\r\n    "
                                                }
                                            ],
                                            "name": "Gathered:2",
                                            "enabled": true,
                                            "id": 18,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Carefully scouring the nooks and crannies of the surrounding rock, you gather (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+)\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "client.skillManager.skills.trade.collecting.onCollected(args);\r\n    "
                                                }
                                            ],
                                            "name": "Gathered:3",
                                            "enabled": true,
                                            "id": 19,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You scour the farmland and find a rudimentary nest, from which you gather (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+)\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "client.skillManager.skills.trade.collecting.onCollected(args);\r\n    "
                                                }
                                            ],
                                            "name": "Gathered:4",
                                            "enabled": true,
                                            "id": 20,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Using your acute sight, you examine the surrounding sea\\. You spot a sparkling patch of pure saltwater, free of impurities, and catch it in a tourmaline vial\\.$"
                                        }
                                    ],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "client.skillManager.skills.trade.collecting.onCollected(args);\r\n    "
                                        }
                                    ],
                                    "name": "Gathered",
                                    "enabled": true,
                                    "id": 15,
                                    "matching": "multitrigger",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": ""
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "client.skillManager.skills.trade.collecting.onCollected(args);\r\n    "
                                                }
                                            ],
                                            "name": "Gathered Extra:0",
                                            "enabled": true,
                                            "id": 4,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^As you cleanse the clay in the riverwater, you discover (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+) hidden by the silt\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "client.skillManager.skills.trade.collecting.onCollected(args);\r\n    "
                                                }
                                            ],
                                            "name": "Gathered Extra:1",
                                            "enabled": true,
                                            "id": 5,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^With your keen eyes, you spot some additional edibles and you gather (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+) to supplement your collection\\.$"
                                        }
                                    ],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "client.skillManager.skills.trade.collecting.onCollected(args);\r\n    "
                                        }
                                    ],
                                    "name": "Gathered Extra",
                                    "enabled": true,
                                    "id": 3,
                                    "matching": "multitrigger",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": ""
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "client.skillManager.skills.trade.collecting.onCollected(args);\r\n    "
                                        }
                                    ],
                                    "name": "Gathered Milk",
                                    "enabled": true,
                                    "id": 21,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^Spotting a cow whose udder hangs low to the ground, you kneel beside her, gently coaxing her milk into [\\w\\W]+\\.$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "client.skillManager.skills.trade.collecting.onCollected(args);\r\n    "
                                        }
                                    ],
                                    "name": "Gathered Saltwater",
                                    "enabled": true,
                                    "id": 22,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^Using your acute sight, you examine the surrounding sea\\. You spot a sparkling patch of pure saltwater, free of impurities, and catch it in [\\w\\W]+\\.$"
                                }
                            ],
                            "actions": [],
                            "name": "Triggers",
                            "enabled": true,
                            "id": 23
                        }
                    ],
                    "actions": [],
                    "name": "Gathering",
                    "enabled": true,
                    "id": 34
                },
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Harvest:0",
                                            "enabled": true,
                                            "id": 36,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You carefully dig through the soft soil of the riverbed but are unable to find any suitable clay\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Harvest:1",
                                            "enabled": true,
                                            "id": 37,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You carefully search the cracks and crevices of the surrounding rock, but find nothing\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Harvest:2",
                                            "enabled": true,
                                            "id": 38,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You have already harvested from this plant recently\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Harvest:3",
                                            "enabled": true,
                                            "id": 39,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^That plant has been fully harvested\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Harvest:4",
                                            "enabled": true,
                                            "id": 40,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^What do you wish to harvest\\?"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Harvest:5",
                                            "enabled": true,
                                            "id": 41,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^What would you like to gather\\?"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Harvest:6",
                                            "enabled": true,
                                            "id": 42,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^This location will not yield \\w+\\.$"
                                        }
                                    ],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "Can't Harvest",
                                    "enabled": true,
                                    "id": 35,
                                    "matching": "multitrigger",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": ""
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "client.skillManager.skills.trade.collecting.onCollected(args);\r\n    "
                                        }
                                    ],
                                    "name": "Harvested",
                                    "enabled": true,
                                    "id": 43,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^You reach out and carefully harvest (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+)\\.$"
                                }
                            ],
                            "actions": [],
                            "name": "Triggers",
                            "enabled": true,
                            "id": 44
                        }
                    ],
                    "actions": [],
                    "name": "Harvesting",
                    "enabled": true,
                    "id": 45
                },
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "client.skillManager.skills.trade.inkmilling.reset();\r\n        client.skillManager.skills.trade.inkmilling.stop();\r\n    "
                                        }
                                    ],
                                    "name": "Mill Clear",
                                    "enabled": true,
                                    "id": 47,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": false,
                                    "prefix_suffix": true,
                                    "text": "^mill clear$"
                                },
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "client.skillManager.skills.trade.inkmilling.stop();\r\n    "
                                        }
                                    ],
                                    "name": "Mill Stop",
                                    "enabled": true,
                                    "id": 48,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": false,
                                    "prefix_suffix": true,
                                    "text": "^mill stop$"
                                },
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "const amount = Number(args[1]);\r\n        const colour = args[2];\r\n        if (!(colour in client.skillManager.skills.trade.inkmilling.queue)) {\r\n            client.skillManager.error(`Unknown ink colour '${colour}'.`);\r\n            return;\r\n        }\r\n        if (!amount || amount < 0) {\r\n            client.skillManager.error(`Unexpected amount '${amount}'.`);\r\n            return;\r\n        }\r\n        client.skillManager.skills.trade.inkmilling.queue[colour] += amount;\r\n        const total = client.skillManager.skills.trade.inkmilling.queue[colour];\r\n        client.skillManager.echo(`Added %lightgray%${amount} ${colour} ${amount > 1 ? 'inks' : 'ink'}%end% to inkmilling queue, to make a total of %lightgray%${total} ${colour} ${total > 1 ? 'inks' : 'ink'}%end%.`);\r\n        if (!client.skillManager.skills.trade.inkmilling.running) {\r\n            client.skillManager.skills.trade.inkmilling.start();\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "Mill",
                                    "enabled": true,
                                    "id": 46,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": false,
                                    "prefix_suffix": true,
                                    "text": "^mill (\\d+) (\\w+)$"
                                }
                            ],
                            "actions": [],
                            "name": "Aliases",
                            "enabled": true,
                            "id": 49
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "if (client.skillManager.skills.trade.inkmilling.running) {\r\n            gag_current_line();\r\n            client.systemService.sendCommand('get 50 reagent from mill|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent');\r\n            client.skillManager.skills.trade.inkmilling.stop();\r\n            client.skillManager.skills.trade.inkmilling.reset();\r\n            client.skillManager.error('Ran out of reagents. Queue has been cleared.');\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "Can't Mill",
                                    "enabled": true,
                                    "id": 52,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^Your mill does not hold the required amount of reagents to mill that\\.$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "if (client.skillManager.skills.trade.inkmilling.running) {\r\n            client.skillManager.echo('Inkmilling failed!');\r\n            client.skillManager.skills.trade.inkmilling.runningQueue = false;\r\n            client.skillManager.skills.trade.inkmilling.runQueue();\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "Mill Failed",
                                    "enabled": true,
                                    "id": 50,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^Lacking the rattle of a successful milling, you realise that you've done something wrong and spoiled the batch, which you empty onto the ground in disgust\\.$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "if (client.skillManager.skills.trade.inkmilling.running) {\r\n            client.systemService.sendCommand(`get group ink from mill|get ink from mill|inrift all ink`);\r\n            client.skillManager.skills.trade.inkmilling.runningQueue = false;\r\n            client.skillManager.skills.trade.inkmilling.runQueue();\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "Milled",
                                    "enabled": true,
                                    "id": 51,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^With a satisfying rattle, you note that the milling is complete as the fruit of your labours drops into the opening at the base of the mill\\.$"
                                }
                            ],
                            "actions": [],
                            "name": "Triggers",
                            "enabled": true,
                            "id": 53
                        }
                    ],
                    "actions": [],
                    "name": "Inkmilling",
                    "enabled": true,
                    "id": 54
                },
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Extract:0",
                                            "enabled": true,
                                            "id": 56,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You carefully search the cracks and crevices of the surrounding rock, but find nothing\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Extract:1",
                                            "enabled": true,
                                            "id": 57,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^What do you wish to extract\\?"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Extract:2",
                                            "enabled": true,
                                            "id": 58,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^This location's extractable \\w+ has been exhausted\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Extract:3",
                                            "enabled": true,
                                            "id": 59,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^This location will not yield \\w+\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Extract:4",
                                            "enabled": true,
                                            "id": 60,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You have already extracted minerals from this location\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                                }
                                            ],
                                            "name": "Can't Extract:5",
                                            "enabled": true,
                                            "id": 61,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^The environment here will not yield any minerals\\.$"
                                        }
                                    ],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "if (client.skillManager.skills.trade.collecting.running) {\r\n            gag_current_line();\r\n        }\r\n    "
                                        }
                                    ],
                                    "name": "Can't Extract",
                                    "enabled": true,
                                    "id": 55,
                                    "matching": "multitrigger",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": ""
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "client.skillManager.skills.trade.collecting.onCollected(args);\r\n    "
                                        }
                                    ],
                                    "name": "Extracted",
                                    "enabled": true,
                                    "id": 62,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^You kneel and collect chunks of earth, using a strong\\-smelling solvent to pull (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+) from the dirt and rock\\. This delicate process completed, you set the minerals aside to dry\\.$"
                                }
                            ],
                            "actions": [],
                            "name": "Triggers",
                            "enabled": true,
                            "id": 63
                        }
                    ],
                    "actions": [],
                    "name": "Transmutation",
                    "enabled": true,
                    "id": 64
                }
            ],
            "actions": [],
            "name": "Trade Skills",
            "enabled": true,
            "id": 75
        },
        {
            "type": "function",
            "items": [],
            "actions": [],
            "name": "onLoad",
            "enabled": true,
            "id": 2,
            "code": "client.skillManager = {\r\n        settings: client.systemService.defaultsDeep(get_variable('skill-manager:settings'), {\r\n            enabled: true,\r\n            class: {\r\n                pranks: {\r\n                    enabled: true\r\n                },\r\n                puppetry: {\r\n                    enabled: true\r\n                },\r\n                tarot: {\r\n                    enabled: true\r\n                },\r\n                tekura: {\r\n                    enabled: true\r\n                },\r\n                telepathy: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            general: {},\r\n            trade: {\r\n                harvesting: {\r\n                    enabled: true\r\n                },\r\n                transmutation: {\r\n                    enabled: true\r\n                },\r\n                gathering: {\r\n                    enabled: true\r\n                },\r\n                collecting: {\r\n                    enabled: true\r\n                },\r\n                inkmilling: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        }),\r\n        skills: {\r\n            class: {\r\n                pranks: {\r\n                    active: true,\r\n                    classes: [\r\n                        'jester'\r\n                    ],\r\n                    handspring(target) {\r\n                        return `handspring ${target}`;\r\n                    }\r\n                },\r\n                puppetry: {\r\n                    active: true,\r\n                    classes: [\r\n                        'jester'\r\n                    ]\r\n                },\r\n                tarot: {\r\n                    active: true,\r\n                    classes: [\r\n                        'jester',\r\n                        'occultist'\r\n                    ],\r\n                    cards: [\r\n                        'blank',\r\n                        'sun',\r\n                        'emperor',\r\n                        'magician',\r\n                        'priestess',\r\n                        'fool',\r\n                        'chariot',\r\n                        'hermit',\r\n                        'empress',\r\n                        'lovers',\r\n                        'hierophant',\r\n                        'hangedman',\r\n                        'tower',\r\n                        'wheel',\r\n                        'creator',\r\n                        'justice',\r\n                        'star',\r\n                        'aeon',\r\n                        'lust',\r\n                        'universe',\r\n                        'devil',\r\n                        'moon',\r\n                        'death'\r\n                    ],\r\n                    descriptionDictionary: {\r\n                        'nothing': 'blank',\r\n                        'Sun': 'sun',\r\n                        'Emperor': 'emperor',\r\n                        'Magician': 'magician',\r\n                        'High Priestess': 'priestess',\r\n                        'Fool': 'fool',\r\n                        'Chariot': 'chariot',\r\n                        'Hermit': 'hermit',\r\n                        'Empress': 'empress',\r\n                        'Lovers': 'lovers',\r\n                        'Hierophant': 'hierophant',\r\n                        'Hanged Man': 'hangedman',\r\n                        'Tower': 'tower',\r\n                        'Wheel of Fortune': 'wheel',\r\n                        'Creator': 'creator',\r\n                        'Justice': 'justice',\r\n                        'Star': 'star',\r\n                        'Aeon': 'aeon',\r\n                        'Lust': 'lust',\r\n                        'Universe': 'universe',\r\n                        'Devil': 'devil',\r\n                        'Moon': 'moon',\r\n                        'Death': 'death'\r\n                    },\r\n                    inscribing: {\r\n                        active: false,\r\n                        runningQueue: false,\r\n                        amount: 0,\r\n                        queue: {\r\n                            sun: 0,\r\n                            emperor: 0,\r\n                            magician: 0,\r\n                            priestess: 0,\r\n                            fool: 0,\r\n                            chariot: 0,\r\n                            hermit: 0,\r\n                            empress: 0,\r\n                            lovers: 0,\r\n                            hierophant: 0,\r\n                            hangedman: 0,\r\n                            tower: 0,\r\n                            wheel: 0,\r\n                            creator: 0,\r\n                            justice: 0,\r\n                            star: 0,\r\n                            aeon: 0,\r\n                            lust: 0,\r\n                            universe: 0,\r\n                            devil: 0,\r\n                            moon: 0,\r\n                            death: 0\r\n                        },\r\n                        start() {\r\n                            if (client.skillManager.skills.class.tarot.inscribing.active) {\r\n                                client.skillManager.error('Already inscribing.');\r\n                                return;\r\n                            }\r\n                            client.skillManager.skills.class.tarot.inscribing.active = true;\r\n                            client.skillManager.skills.class.tarot.inscribing.runQueue();\r\n                            client.skillManager.echo('Started inscribing.');\r\n                        },\r\n                        stop() {\r\n                            if (!client.skillManager.skills.class.tarot.inscribing.active) {\r\n                                client.skillManager.error('Already not inscribing.');\r\n                                return;\r\n                            }\r\n                            client.skillManager.skills.class.tarot.inscribing.active = false;\r\n                            client.skillManager.skills.class.tarot.inscribing.runningQueue = false;\r\n                            client.skillManager.echo('Stopped inscribing.');\r\n                        },\r\n                        reset() {\r\n                            client.skillManager.skills.class.tarot.inscribing.queue = {\r\n                                sun: 0,\r\n                                emperor: 0,\r\n                                magician: 0,\r\n                                priestess: 0,\r\n                                fool: 0,\r\n                                chariot: 0,\r\n                                hermit: 0,\r\n                                empress: 0,\r\n                                lovers: 0,\r\n                                hierophant: 0,\r\n                                hangedman: 0,\r\n                                tower: 0,\r\n                                wheel: 0,\r\n                                creator: 0,\r\n                                justice: 0,\r\n                                star: 0,\r\n                                aeon: 0,\r\n                                lust: 0,\r\n                                universe: 0,\r\n                                devil: 0,\r\n                                moon: 0,\r\n                                death: 0\r\n                            };\r\n                            client.skillManager.echo('Reset inscribing queue.');\r\n                        },\r\n                        runQueue() {\r\n                            if (!client.skillManager.skills.class.tarot.inscribing.active) {\r\n                                return;\r\n                            }\r\n                            if (client.skillManager.skills.class.tarot.inscribing.runningQueue) {\r\n                                return;\r\n                            }\r\n                            client.skillManager.skills.class.tarot.inscribing.runningQueue = true;\r\n                            let card;\r\n                            let amount = 0;\r\n                            for (const queueCard in client.skillManager.skills.class.tarot.inscribing.queue) {\r\n                                if (client.skillManager.skills.class.tarot.inscribing.queue[queueCard] > 0) {\r\n                                    card = queueCard;\r\n                                    amount = Math.min(client.skillManager.skills.class.tarot.inscribing.queue[queueCard], 20);\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!card) {\r\n                                client.skillManager.skills.class.tarot.inscribing.stop();\r\n                                return;\r\n                            }\r\n                            client.skillManager.skills.class.tarot.inscribing.amount = amount;\r\n                            client.queueManager.appendCommand(`inscribe blank with ${amount} ${card}`, 'equilibriumBalance');\r\n                        }\r\n                    }\r\n                },\r\n                tekura: {\r\n                    active: true,\r\n                    classes: [\r\n                        'monk'\r\n                    ]\r\n                },\r\n                telepathy: {\r\n                    active: true,\r\n                    classes: [\r\n                        'monk'\r\n                    ]\r\n                }\r\n            },\r\n            general: {},\r\n            trade: {\r\n                harvesting: {\r\n                    active: true,\r\n                    harvestables: [\r\n                        'bayberry',\r\n                        'bellwort',\r\n                        'burdock',\r\n                        'cohosh',\r\n                        'bloodroot',\r\n                        'echinacea',\r\n                        'ginger',\r\n                        'ginseng',\r\n                        'goldenseal',\r\n                        'hawthorn',\r\n                        'moss',\r\n                        'kelp',\r\n                        'kola',\r\n                        'kuzu',\r\n                        'slipper',\r\n                        'myrrh',\r\n                        'lobelia',\r\n                        'ash',\r\n                        'sac',\r\n                        'sileris',\r\n                        'skin',\r\n                        'skullcap',\r\n                        'elm',\r\n                        'valerian',\r\n                        'weed',\r\n                        'pear'\r\n                    ],\r\n                    descriptionDictionary: {\r\n                        'bayberry bark': 'bayberry',\r\n                        'pieces of bayberry bark': 'bayberry',\r\n                        'bellwort flower': 'bellwort',\r\n                        'bellwort flowers': 'bellwort',\r\n                        'dark burdock root': 'burdock',\r\n                        'burdock roots': 'burdock',\r\n                        'black cohosh root': 'cohosh',\r\n                        'cohosh roots': 'cohosh',\r\n                        'bloodroot leaf': 'bloodroot',\r\n                        'bloodroot leaves': 'bloodroot',\r\n                        'echinacea root': 'echinacea',\r\n                        'echinacea roots': 'echinacea',\r\n                        'ginger root': 'ginger',\r\n                        'ginger roots': 'ginger',\r\n                        'ginseng root': 'ginseng',\r\n                        'ginseng roots': 'ginseng',\r\n                        'goldenseal root': 'goldenseal',\r\n                        'goldenseal roots': 'goldenseal',\r\n                        'hawthorn berry': 'hawthorn',\r\n                        'hawthorn berries': 'hawthorn',\r\n                        'irid moss': 'moss',\r\n                        'pieces of irid moss': 'moss',\r\n                        'piece of kelp': 'kelp',\r\n                        'pieces of kelp': 'kelp',\r\n                        'kola nut': 'kola',\r\n                        'kola nuts': 'kola',\r\n                        'kuzu root': 'kuzu',\r\n                        'kuzu roots': 'kuzu',\r\n                        'lady\\'s slipper root': 'slipper',\r\n                        'lady\\'s slipper roots': 'slipper',\r\n                        'ball of myrrh gum': 'myrrh',\r\n                        'myrrh balls': 'myrrh',\r\n                        'lobelia seed': 'lobelia',\r\n                        'lobelia seeds': 'lobelia',\r\n                        'prickly ash bark': 'ash',\r\n                        'pieces of prickly ash bark': 'ash',\r\n                        'venom sac': 'sac',\r\n                        'venom sacs': 'sac',\r\n                        'sileris berry': 'sileris',\r\n                        'sileris berries': 'sileris',\r\n                        'sidewinder skin': 'skin',\r\n                        'sidewinder skins': 'skin',\r\n                        'skullcap flower': 'skullcap',\r\n                        'skullcap flowers': 'skullcap',\r\n                        'slippery elm': 'elm',\r\n                        'slippery elms': 'elm',\r\n                        'valerian leaf': 'valerian',\r\n                        'valerian leaves': 'valerian',\r\n                        'sprig of cactus weed': 'weed',\r\n                        'sprigs of cactus weed': 'weed',\r\n                        'prickly pear': 'pear',\r\n                        'prickly pears': 'pear'\r\n                    }\r\n                },\r\n                transmutation: {\r\n                    active: true,\r\n                    extractables: [\r\n                        'antimony',\r\n                        'argentum',\r\n                        'arsenic',\r\n                        'aurum',\r\n                        'azurite',\r\n                        'bisemutum',\r\n                        'calamine',\r\n                        'calcite',\r\n                        'cinnabar',\r\n                        'cuprum',\r\n                        'dolomite',\r\n                        'ferrum',\r\n                        'gypsum',\r\n                        'magnesium',\r\n                        'malachite',\r\n                        'plumbum',\r\n                        'potash',\r\n                        'quartz',\r\n                        'quicksilver',\r\n                        'realgar',\r\n                        'stannum'\r\n                    ],\r\n                    descriptionDictionary: {\r\n                        'antimony flake': 'antimony',\r\n                        'antimony flakes': 'antimony',\r\n                        'argentum flake': 'argentum',\r\n                        'argentum flakes': 'argentum',\r\n                        'arsenic pellet': 'arsenic',\r\n                        'arsenic pellets': 'arsenic',\r\n                        'aurum flake': 'aurum',\r\n                        'aurum flakes': 'aurum',\r\n                        'azurite mote': 'azurite',\r\n                        'azurite motes': 'azurite',\r\n                        'bisemutum chip': 'bisemutum',\r\n                        'bisemutum chips': 'bisemutum',\r\n                        'calamine crystal': 'calamine',\r\n                        'calamine crystals': 'calamine',\r\n                        'calcite mote': 'calcite',\r\n                        'calcite motes': 'calcite',\r\n                        'pinch of ground cinnabar': 'cinnabar',\r\n                        'pinches of ground cinnabar': 'cinnabar',\r\n                        'cuprum flake': 'cuprum',\r\n                        'cuprum flakes': 'cuprum',\r\n                        'dolomite grain': 'dolomite',\r\n                        'dolomite grains': 'dolomite',\r\n                        'ferrum flake': 'ferrum',\r\n                        'ferrum flakes': 'ferrum',\r\n                        'gypsum crystal': 'gypsum',\r\n                        'gypsum crystals': 'gypsum',\r\n                        'magnesium chip': 'magnesium',\r\n                        'magnesium chips': 'magnesium',\r\n                        'pinch of ground malachite': 'malachite',\r\n                        'pinches of ground malachite': 'malachite',\r\n                        'plumbum flake': 'plumbum',\r\n                        'plumbum flakes': 'plumbum',\r\n                        'potash crystal': 'potash',\r\n                        'potash crystals': 'potash',\r\n                        'quartz grain': 'quartz',\r\n                        'quartz grains': 'quartz',\r\n                        'quicksilver droplet': 'quicksilver',\r\n                        'quicksilver droplets': 'quicksilver',\r\n                        'pinch of realgar crystals': 'realgar',\r\n                        'pinches of ground realgar': 'realgar',\r\n                        'stannum flake': 'stannum',\r\n                        'stannum flakes': 'stannum'\r\n                    }\r\n                },\r\n                gathering: {\r\n                    active: true,\r\n                    butchering: {\r\n                        running: false,\r\n                        descriptionDictionary: {\r\n                            'piece of buffalo horn': 'buffalohorn',\r\n                            'pieces of buffalo horn': 'buffalohorn',\r\n                            'pile of fish scales': 'scales',\r\n                            'piles of fish scales': 'scales',\r\n                            'pile of gold flakes': 'flakes',\r\n                            'piles of gold flakes': 'flakes',\r\n                            'an ink bladder': 'bladder',\r\n                            'ink bladders': 'bladder',\r\n                            'sliver of red scorpion chitin': 'redchitin',\r\n                            'slivers of red chitin': 'redchitin',\r\n                            'sliver of yellow scorpion chitin': 'yellowchitin',\r\n                            'slivers of yellow chitin': 'yellowchitin',\r\n                            'lump of red clay': 'clay',\r\n                            'lumps of red clay': 'clay',\r\n                            'shark tooth': 'tooth',\r\n                            'shark teeth': 'tooth',\r\n                            'wyrm tongue': 'tongue',\r\n                            'wyrm tongues': 'tongue',\r\n                            'chunk of animal fat': 'fat',\r\n                            'chunks of animal fat': 'fat',\r\n                            'fillet of fish': 'fish',\r\n                            'pieces of fish': 'fish',\r\n                            'tender cut of meat': 'meat',\r\n                            'pieces of meat': 'meat',\r\n                            'poultry breast': 'poultry',\r\n                            'pieces of poultry': 'poultry',\r\n                            'unprocessed animal skin': 'skin',\r\n                            'skins': 'skin'\r\n                        },\r\n                        start() {\r\n                            if (client.skillManager.skills.trade.gathering.butchering.running) {\r\n                                client.skillManager.error('Already butchering.');\r\n                                return;\r\n                            }\r\n                            const corpses = client.gmcpService.items.inv.filter(value => value.name.startsWith('the corpse of'));\r\n                            if (corpses.length === 0) {\r\n                                client.skillManager.error(`You have no corpses.`);\r\n                                return;\r\n                            }\r\n                            if (client.inventoryManager.settings.wielding.expectedLeftId) {\r\n                                client.skillManager.skills.trade.gathering.butchering.itemToRewield = client.inventoryManager.settings.wielding.expectedLeftId;\r\n                            }\r\n                            client.inventoryManager.wield('cleaver', 'left');\r\n                            client.skillManager.skills.trade.gathering.butchering.running = true;\r\n                            client.skillManager.skills.trade.gathering.butchering.butcher();\r\n                            client.skillManager.echo('Started butchering.');\r\n                        },\r\n                        stop() {\r\n                            if (!client.skillManager.skills.trade.gathering.butchering.running) {\r\n                                client.skillManager.error('Already not butchering.');\r\n                                return;\r\n                            }\r\n                            client.skillManager.skills.trade.gathering.butchering.running = false;\r\n                            if (client.skillManager.skills.trade.gathering.butchering.itemToRewield) {\r\n                                client.inventoryManager.wield(client.skillManager.skills.trade.gathering.butchering.itemToRewield, 'left');\r\n                            }\r\n                            else {\r\n                                client.inventoryManager.unwield('cleaver');\r\n                            }\r\n                            client.skillManager.echo('Stopped butchering.');\r\n                        },\r\n                        butcher() {\r\n                            if (client.skillManager.skills.trade.gathering.butchering.running) {\r\n                                client.queueManager.appendCommand('butcher corpse for reagent', 'equilibriumBalance', 'balance');\r\n                            }\r\n                        }\r\n                    },\r\n                    gatherables: [\r\n                        'vegetable',\r\n                        'clay',\r\n                        'fruit',\r\n                        'grain',\r\n                        'egg',\r\n                        'nut',\r\n                        'olive',\r\n                        'sugarcane',\r\n                        'lumic',\r\n                        'cacao',\r\n                        'dust',\r\n                        'goldbar',\r\n                        'seed',\r\n                        'goldflakes',\r\n                        'milk',\r\n                        'saltwater'\r\n                    ],\r\n                    environmentDictionary: {\r\n                        'Forest': ['nut'],\r\n                        'Garden': ['fruit', 'vegetable'],\r\n                        'Grasslands': ['sugarcane', 'grain', 'from farm'],\r\n                        'Jungle': ['fruit', 'cacao'],\r\n                        'Natural underground': ['lumic', 'dust'],\r\n                        'Valley': ['olive'],\r\n                        'River': ['clay'],\r\n                        'Ocean': ['saltwater']\r\n                    },\r\n                    descriptionDictionary: {\r\n                        'assortment of vegetables': 'vegetable',\r\n                        'vegetables': 'vegetable',\r\n                        'lump of red clay': 'clay',\r\n                        'lumps of red clay': 'clay',\r\n                        'handful of fruits': 'fruit',\r\n                        'pieces of fruit': 'fruit',\r\n                        'handful of grain': 'grain',\r\n                        'handfuls of grain': 'grain',\r\n                        'small brown egg': 'egg',\r\n                        'eggs': 'egg',\r\n                        'handful of nuts': 'nut',\r\n                        'handfuls of nuts': 'nut',\r\n                        'cluster of olives': 'olive',\r\n                        'large, green olives': 'olive',\r\n                        'raw sugarcane stick': 'sugarcane',\r\n                        'sticks of sugarcane': 'sugarcane',\r\n                        'small patch of lumic moss': 'lumic',\r\n                        'patches of lumic moss': 'lumic',\r\n                        'cacao pod': 'cacao',\r\n                        'cacao pods': 'cacao',\r\n                        'pinch of diamond dust': 'dust',\r\n                        'pinches of diamond dust': 'dust',\r\n                        'bar of gold': 'goldbar',\r\n                        'gold bars': 'goldbar',\r\n                        'handfuls of seeds': 'seed',\r\n                        'handful of seeds': 'seed',\r\n                        'piles of gold flakes': 'goldflakes',\r\n                        'pile of gold flakes': 'goldflakes',\r\n                        'sip of milk': 'milk',\r\n                        'sips of milk': 'milk',\r\n                        'sip of saltwater': 'saltwater',\r\n                        'sips of saltwater': 'saltwater'\r\n                    },\r\n                    getGatherables() {\r\n                        return client.skillManager.skills.trade.gathering.environmentDictionary[client.gmcpService.room.environment] || [];\r\n                    }\r\n                },\r\n                collecting: {\r\n                    active: true,\r\n                    running: false,\r\n                    automatic: false,\r\n                    waitingForPlants: false,\r\n                    waitingForMinerals: false,\r\n                    queue: new Set(),\r\n                    day: '',\r\n                    rooms: {},\r\n                    start() {\r\n                        if (client.skillManager.skills.trade.collecting.running) {\r\n                            client.skillManager.error('Already collecting.');\r\n                            return;\r\n                        }\r\n                        client.skillManager.skills.trade.collecting.running = true;\r\n                        client.skillManager.skills.trade.collecting.waitingForPlants = true;\r\n                        client.skillManager.skills.trade.collecting.waitingForMinerals = true;\r\n                        client.skillManager.skills.trade.gathering.getGatherables().forEach(value => {\r\n                            client.skillManager.skills.trade.collecting.queue.add(`gather ${value}`);\r\n                        });\r\n                        client.queueManager.appendCommand('plants');\r\n                        client.queueManager.appendCommand('minerals');\r\n                        client.skillManager.echo('Started collecting.');\r\n                    },\r\n                    stop() {\r\n                        if (!client.skillManager.skills.trade.collecting.running) {\r\n                            client.skillManager.error('Already not collecting.');\r\n                            return;\r\n                        }\r\n                        client.skillManager.skills.trade.collecting.running = false;\r\n                        client.skillManager.skills.trade.collecting.waitingForPlants = false;\r\n                        client.skillManager.skills.trade.collecting.waitingForMinerals = false;\r\n                        client.skillManager.echo('Stopped collecting.');\r\n                    },\r\n                    clear() {\r\n                        client.skillManager.skills.trade.collecting.queue.clear();\r\n                        client.skillManager.echo('Reset collecting queue.');\r\n                    },\r\n                    collect() {\r\n                        if (!client.skillManager.skills.trade.collecting.running) {\r\n                            return;\r\n                        }\r\n                        if (client.skillManager.skills.trade.collecting.queue.size === 0) {\r\n                            // Delay so last command can call inrift\r\n                            setTimeout(() => {\r\n                                client.skillManager.skills.trade.collecting.stop();\r\n                            });\r\n                            return;\r\n                        }\r\n                        client.skillManager.skills.trade.collecting.queue.forEach(value => {\r\n                            client.queueManager.appendCommand(value, 'equilibriumBalance', 'balance');\r\n                        });\r\n                        client.skillManager.skills.trade.collecting.queue.clear();\r\n                    },\r\n                    tryCollect() {\r\n                        if (client.skillManager.skills.trade.collecting.running && !client.skillManager.skills.trade.collecting.waitingForPlants && !client.skillManager.skills.trade.collecting.waitingForMinerals) {\r\n                            client.skillManager.skills.trade.collecting.collect();\r\n                        }\r\n                    },\r\n                    onPlant(args) {\r\n                        if (client.skillManager.settings.trade.collecting.enabled && client.skillManager.skills.trade.collecting.running) {\r\n                            gag_current_line();\r\n                            const item = args[1].trim().toLowerCase();\r\n                            const collected = client.skillManager.skills.trade.collecting.rooms[client.gmcpService.room.num] || [];\r\n                            if (!collected.includes(item)) {\r\n                                if (client.skillManager.skills.trade.harvesting.harvestables.includes(item)) {\r\n                                    client.skillManager.skills.trade.collecting.queue.add(`harvest ${item}`);\r\n                                }\r\n                                else if (client.skillManager.skills.trade.gathering.gatherables.includes(item)) {\r\n                                    client.skillManager.skills.trade.collecting.queue.add(`gather ${item}`);\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    onMineral(args) {\r\n                        if (client.skillManager.settings.trade.collecting.enabled && client.skillManager.skills.trade.collecting.running) {\r\n                            gag_current_line();\r\n                            const item = args[1].trim().toLowerCase();\r\n                            const collected = client.skillManager.skills.trade.collecting.rooms[client.gmcpService.room.num] || [];\r\n                            if (client.skillManager.skills.trade.transmutation.extractables.includes(item) && !collected.includes(item)) {\r\n                                client.skillManager.skills.trade.collecting.queue.add(`extract ${item}`);\r\n                            }\r\n                        }\r\n                    },\r\n                    onCollected(args) {\r\n                        var _a;\r\n                        if (client.skillManager.settings.trade.collecting.enabled && client.skillManager.skills.trade.collecting.running) {\r\n                            const amountMatch = args[1] || '';\r\n                            const itemNameMatch = args[2];\r\n                            const amount = ((_a = amountMatch.match(/(\\d+)/)) === null || _a === void 0 ? void 0 : _a[1]) || '1';\r\n                            const item = client.skillManager.skills.trade.harvesting.descriptionDictionary[itemNameMatch]\r\n                                || client.skillManager.skills.trade.transmutation.descriptionDictionary[itemNameMatch]\r\n                                || client.skillManager.skills.trade.gathering.descriptionDictionary[itemNameMatch];\r\n                            if (item) {\r\n                                const collected = client.skillManager.skills.trade.collecting.rooms[client.gmcpService.room.num] || [];\r\n                                collected.push(item);\r\n                                client.skillManager.skills.trade.collecting.rooms[client.gmcpService.room.num] = collected;\r\n                                client.systemService.sendCommand(`inrift ${amount} ${item}`);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                inkmilling: {\r\n                    active: true,\r\n                    running: false,\r\n                    runningQueue: false,\r\n                    queue: {\r\n                        red: 0,\r\n                        blue: 0,\r\n                        yellow: 0,\r\n                        green: 0,\r\n                        purple: 0,\r\n                        gold: 0,\r\n                        black: 0\r\n                    },\r\n                    reagents: {\r\n                        red: ['redclay', 'redchitin'],\r\n                        blue: ['inkbladder', 'lumic'],\r\n                        yellow: ['yellowchitin'],\r\n                        gold: ['goldflakes'],\r\n                        common: ['fishscales'],\r\n                        uncommon: ['buffalohorn'],\r\n                        scarce: ['sharktooth'],\r\n                        rare: ['wyrmtongue']\r\n                    },\r\n                    inks: {\r\n                        red: {\r\n                            red: 1,\r\n                            common: 1\r\n                        },\r\n                        blue: {\r\n                            blue: 1,\r\n                            uncommon: 1\r\n                        },\r\n                        yellow: {\r\n                            yellow: 1,\r\n                            scarce: 1\r\n                        },\r\n                        green: {\r\n                            blue: 2,\r\n                            yellow: 1,\r\n                            uncommon: 2,\r\n                            scarce: 1\r\n                        },\r\n                        purple: {\r\n                            red: 2,\r\n                            blue: 2,\r\n                            common: 2,\r\n                            uncommon: 2,\r\n                            rare: 1\r\n                        },\r\n                        gold: {\r\n                            gold: 1,\r\n                            common: 2,\r\n                            uncommon: 2,\r\n                            scarce: 2,\r\n                            rare: 1\r\n                        },\r\n                        black: {\r\n                            red: 1,\r\n                            blue: 1,\r\n                            yellow: 1,\r\n                            gold: 1,\r\n                            common: 2,\r\n                            uncommon: 2,\r\n                            scarce: 2,\r\n                            rare: 3\r\n                        }\r\n                    },\r\n                    descriptionDictionary: {\r\n                        'red ink': 'redink',\r\n                        'red inks': 'redink',\r\n                        'blue ink': 'blueink',\r\n                        'blue inks': 'blueink',\r\n                        'yellow ink': 'yellowink',\r\n                        'yellow inks': 'yellowink',\r\n                        'green ink': 'greenink',\r\n                        'green inks': 'greenink',\r\n                        'purple ink': 'purpleink',\r\n                        'purple inks': 'purpleink',\r\n                        'gold ink': 'goldink',\r\n                        'gold inks': 'goldink',\r\n                        'black ink': 'blackink',\r\n                        'black inks': 'blackink'\r\n                    },\r\n                    mill(colour, amount = 1) {\r\n                        return `mill for ${amount} ${colour}`;\r\n                    },\r\n                    start() {\r\n                        if (client.skillManager.skills.trade.inkmilling.running) {\r\n                            client.skillManager.error('Already milling.');\r\n                            return;\r\n                        }\r\n                        client.skillManager.skills.trade.inkmilling.running = true;\r\n                        client.skillManager.skills.trade.inkmilling.runQueue();\r\n                        client.skillManager.echo('Started milling.');\r\n                    },\r\n                    stop() {\r\n                        if (!client.skillManager.skills.trade.inkmilling.running) {\r\n                            client.skillManager.error('Already not milling.');\r\n                            return;\r\n                        }\r\n                        client.skillManager.skills.trade.inkmilling.running = false;\r\n                        client.skillManager.skills.trade.inkmilling.runningQueue = false;\r\n                        client.skillManager.echo('Stopped milling.');\r\n                    },\r\n                    reset() {\r\n                        client.skillManager.skills.trade.inkmilling.queue = {\r\n                            red: 0,\r\n                            blue: 0,\r\n                            yellow: 0,\r\n                            green: 0,\r\n                            purple: 0,\r\n                            gold: 0,\r\n                            black: 0\r\n                        };\r\n                        client.skillManager.echo('Reset milling queue.');\r\n                    },\r\n                    runQueue() {\r\n                        if (!client.skillManager.skills.trade.inkmilling.running) {\r\n                            return;\r\n                        }\r\n                        if (client.skillManager.skills.trade.inkmilling.runningQueue) {\r\n                            return;\r\n                        }\r\n                        client.skillManager.skills.trade.inkmilling.runningQueue = true;\r\n                        let inkColour;\r\n                        for (const queueInkColour in client.skillManager.skills.trade.inkmilling.queue) {\r\n                            if (client.skillManager.skills.trade.inkmilling.queue[queueInkColour] > 0) {\r\n                                inkColour = queueInkColour;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!inkColour) {\r\n                            client.skillManager.skills.trade.inkmilling.stop();\r\n                            return;\r\n                        }\r\n                        // client.skillManager.echo(`Inkmilling Queue: ${client.skillManager.skills.trade.inkmilling.queue.join(', ')}`);\r\n                        const queuedAmount = client.skillManager.skills.trade.inkmilling.queue[inkColour];\r\n                        const amount = 5 > queuedAmount ? queuedAmount : 5;\r\n                        const inkReagents = client.skillManager.skills.trade.inkmilling.inks[inkColour];\r\n                        const outriftCommands = [];\r\n                        const putInMillCommands = [];\r\n                        for (let inkReagent in inkReagents) {\r\n                            const reagentAmount = amount * inkReagents[inkReagent];\r\n                            const reagents = client.skillManager.skills.trade.inkmilling.reagents[inkReagent];\r\n                            const reagent = reagents.find(value => {\r\n                                var _a;\r\n                                return Number((_a = client.gmcpService.rift[value]) === null || _a === void 0 ? void 0 : _a.amount) >= reagentAmount;\r\n                            });\r\n                            if (reagent === undefined) {\r\n                                client.skillManager.skills.trade.inkmilling.queue[inkColour] = 0;\r\n                                client.skillManager.skills.trade.inkmilling.runningQueue = false;\r\n                                client.systemService.sendCommand('get 50 reagent from mill|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent');\r\n                                client.skillManager.error(`Ran out of ${reagents.join(' and ')}. Queue for ${inkColour} has been cleared.`);\r\n                                client.skillManager.skills.trade.inkmilling.runQueue();\r\n                                return;\r\n                            }\r\n                            if (reagentAmount === 1) {\r\n                                outriftCommands.push(`outrift ${reagent}`);\r\n                                putInMillCommands.push(`put ${reagent} in mill`);\r\n                            }\r\n                            else {\r\n                                outriftCommands.push(`outrift ${reagentAmount} ${reagent}`);\r\n                                putInMillCommands.push(`put group ${reagent} in mill`);\r\n                            }\r\n                        }\r\n                        client.systemService.sendCommands(outriftCommands);\r\n                        client.systemService.sendCommands(putInMillCommands);\r\n                        client.systemService.sendCommand(client.skillManager.skills.trade.inkmilling.mill(inkColour, amount));\r\n                        client.skillManager.skills.trade.inkmilling.queue[inkColour] -= amount;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        echo(text) {\r\n            client.displayService.echo(`%lightgray%[%deepskyblue%Skill Manager%end%]:%end% ${client.displayService.colorify(text)}`);\r\n        },\r\n        error(text) {\r\n            client.skillManager.echo(`%red%${text}%end%`);\r\n        },\r\n        save() {\r\n            client.systemService.save('skill-manager', () => {\r\n                set_variable('skil-manager:settings', client.skillManager.settings);\r\n                client.skillManager.echo('Settings saved.');\r\n            });\r\n        },\r\n        onAbility(skill, ability, command, eventOrEvents, args) {\r\n            if (Array.isArray(args)) {\r\n                colorize_current_line(0, args[0].length, 'lightsalmon');\r\n            }\r\n            else {\r\n                for (const line of args.lines) {\r\n                    if ('parsed_line' in line) {\r\n                        line.parsed_line.colorize(0, line.line.length, 'lightsalmon');\r\n                    }\r\n                }\r\n            }\r\n            const events = Array.isArray(eventOrEvents) ? eventOrEvents : [eventOrEvents];\r\n            events.forEach(event => {\r\n                client.skillManager.echo(`${skill}:${ability}:${command}:${event}`);\r\n            });\r\n        }\r\n    };\r\n    client.gmcpService.subscribe(['Room.Info'], () => {\r\n        if (client.skillManager.skills.trade.collecting.running) {\r\n            if (client.gmcpService.previousRoom.num !== client.gmcpService.room.num) {\r\n                // Delay stopping so the last collect can call inrift\r\n                setTimeout(() => {\r\n                    client.skillManager.skills.trade.collecting.stop();\r\n                });\r\n            }\r\n        }\r\n        if (client.skillManager.skills.trade.collecting.automatic) {\r\n            // Delay starting so collecting starts after it stops\r\n            setTimeout(() => {\r\n                client.skillManager.skills.trade.collecting.start();\r\n            });\r\n        }\r\n    });\r\n    client.gmcpService.subscribe(['IRE.Time.List', 'IRE.Time.Update'], args => {\r\n        if ('day' in args.gmcp_args && args.gmcp_args.day !== undefined) {\r\n            client.skillManager.skills.trade.collecting.day = args.gmcp_args.day;\r\n            client.skillManager.skills.trade.collecting.rooms = {};\r\n        }\r\n    });\r\n    client.queueManager.subscribe(['balance', 'equilibrium', 'equilibriumBalance'], (_queue, method, _args) => {\r\n        if (client.skillManager.skills.trade.gathering.butchering.running) {\r\n            // TODO: Confirm we were actually butchering\r\n            if (method === 'run') {\r\n                client.skillManager.skills.trade.gathering.butchering.butcher();\r\n            }\r\n        }\r\n        if (client.skillManager.skills.trade.collecting.running) {\r\n            // TODO: Confirm we were actually collecting\r\n            if (method === 'run' && client.queueManager.equilibriumBalanceQueue.length === 0) {\r\n                // Delay stopping so the last collect can call inrift\r\n                setTimeout(() => {\r\n                    client.skillManager.skills.trade.collecting.stop();\r\n                });\r\n            }\r\n        }\r\n    });\r\n    send_GMCP('IRE.Time.Request');\r\n    client.skillManager.echo('Loaded.');\r\n"
        }
    ],
    "actions": [],
    "name": "Skill Manager",
    "enabled": true,
    "id": 1,
    "description": "A Skill Manager"
}
{
    "type": "group",
    "items": [
        {
            "type": "group",
            "items": [
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function (args) {\n        const amount = Number(args[1]);\n        const card = args[2];\n        if (!client.skillmanager.tarot.cards.includes(card)) {\n            client.skillmanager.error(`Unknown tarot card '${card}'.`);\n            return;\n        }\n        if (!amount || amount < 0) {\n            client.skillmanager.error(`Unexpected amount '${amount}'.`);\n            return;\n        }\n        client.skillmanager.tarot.inscribing.queue[card] += amount;\n        const total = client.skillmanager.tarot.inscribing.queue[card];\n        client.skillmanager.echo(`Added %lightgray%${amount} ${card} ${amount > 1 ? 'cards' : 'card'}%end% to inscribing queue, to make a total of %lightgray%${total} ${card} ${total > 1 ? 'cards' : 'card'}%end%.`);\n        if (!client.skillmanager.tarot.inscribing.active) {\n            client.skillmanager.tarot.inscribing.start();\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Inscribe",
                                    "enabled": true,
                                    "id": 77,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "prefix_suffix": true,
                                    "text": "^inscribe (\\d+) (\\w+)$"
                                },
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function () {\n        client.skillmanager.tarot.inscribing.reset();\n        client.skillmanager.tarot.inscribing.stop();\n    })(args);"
                                        }
                                    ],
                                    "name": "Inscribe Clear",
                                    "enabled": true,
                                    "id": 79,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "prefix_suffix": true,
                                    "text": "^inscribe clear$"
                                },
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function () {\n        client.skillmanager.tarot.inscribing.stop();\n    })(args);"
                                        }
                                    ],
                                    "name": "Inscribe Stop",
                                    "enabled": true,
                                    "id": 78,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "prefix_suffix": true,
                                    "text": "^inscribe stop$"
                                }
                            ],
                            "actions": [],
                            "name": "Aliases",
                            "enabled": true,
                            "id": 80
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function () {\n        if (client.skillmanager.tarot.inscribing.active) {\n            gag_current_line();\n            client.skillmanager.error('Inscribing failed!');\n            client.skillmanager.tarot.inscribing.runningQueue = false;\n            client.skillmanager.tarot.inscribing.runQueue();\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Inscribe Failed",
                                    "enabled": true,
                                    "id": 81,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^Your concentration ruined, you throw away the half-finished and now worthless tarot\\.$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function (args) {\n        let card = client.skillmanager.tarot.descriptionDictionary[args[1]];\n        client.systemservice.sendCommand(`ind ${card}`);\n        if (client.skillmanager.tarot.inscribing.active) {\n            gag_current_line();\n            client.skillmanager.echo('%lime%Inscribing Successful!');\n            client.skillmanager.tarot.inscribing.queue[card] = Math.max(client.skillmanager.tarot.inscribing.queue[card] - 1, 0);\n            client.skillmanager.tarot.inscribing.runningQueue = false;\n            client.skillmanager.tarot.inscribing.runQueue();\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Inscribed",
                                    "enabled": true,
                                    "id": 82,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^You have successfully inscribed the image of (?:the )?([\\w\\W]+) on your Tarot card\\.$"
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.tarot.inscribing.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Inscribing:0",
                                            "enabled": true,
                                            "id": 83,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Wisely preparing yourself beforehand, you lay out the quill and various inks you will need to inscribe the sign of (?:the )?([\\w\\W]+) into your card\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.tarot.inscribing.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Inscribing:1",
                                            "enabled": true,
                                            "id": 84,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Focusing your mind on the task ahead, you block out all extraneous thoughts\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.tarot.inscribing.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Inscribing:2",
                                            "enabled": true,
                                            "id": 85,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You take up the quill and begin to trace the outline of (?:the )?([\\w\\W]+) with careful precision\\. The slightest mistake will render the card useless\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.tarot.inscribing.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Inscribing:3",
                                            "enabled": true,
                                            "id": 86,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Finishing the outline, you begin to colour (?:the )?([\\w\\W]+) properly, utilising just the right amount of hue here, the perfect amount of saturation there\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Inscribing",
                                    "enabled": true,
                                    "id": 87,
                                    "matching": "regexp"
                                }
                            ],
                            "actions": [],
                            "name": "Triggers",
                            "enabled": true,
                            "id": 88
                        }
                    ],
                    "actions": [],
                    "name": "Tarot",
                    "enabled": true,
                    "id": 89
                }
            ],
            "actions": [],
            "name": "Class Skills",
            "enabled": true,
            "id": 90
        },
        {
            "type": "group",
            "items": [],
            "actions": [],
            "name": "General Skills",
            "enabled": true,
            "id": 91
        },
        {
            "type": "group",
            "items": [
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function () {\n        const wasAutomatic = client.skillmanager.collecting.automatic;\n        client.skillmanager.collecting.automatic = !client.skillmanager.collecting.automatic;\n        if (wasAutomatic) {\n            client.skillmanager.echo(`Will no longer automatically start collecting in each room.`);\n        }\n        else {\n            client.skillmanager.echo(`Will now automatically start collecting in each room.`);\n            client.skillmanager.collecting.start();\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Collect Automatically",
                                    "enabled": true,
                                    "id": 73,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "prefix_suffix": true,
                                    "text": "^collect ?(?:auto|automatic|automatically)$"
                                },
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function () {\n        client.skillmanager.collecting.start();\n    })(args);"
                                        }
                                    ],
                                    "name": "Collect",
                                    "enabled": true,
                                    "id": 72,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "prefix_suffix": true,
                                    "text": "^collect$"
                                }
                            ],
                            "actions": [],
                            "name": "Aliases",
                            "enabled": true,
                            "id": 74
                        }
                    ],
                    "actions": [],
                    "name": "Collecting",
                    "enabled": true,
                    "id": 75
                },
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "alias",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        client.skillmanager.gathering.butchering.start();\n    })(args);"
                                                }
                                            ],
                                            "name": "Butcher",
                                            "enabled": true,
                                            "id": 33,
                                            "matching": "regexp",
                                            "whole_words": true,
                                            "case_sensitive": true,
                                            "prefix_suffix": true,
                                            "text": "^butcher$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Aliases",
                                    "enabled": true,
                                    "id": 34
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.gathering.butchering.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Butcher Failed",
                                            "enabled": true,
                                            "id": 31,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^As you set about butchering the corpse, you realise you have made a mistake and mutilated it beyond redemption\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function (args) {\n        var _a;\n        if (client.skillmanager.gathering.butchering.active) {\n            const amountMatch = args[1] || '';\n            const itemNameMatch = args[2];\n            const amount = ((_a = amountMatch.match(/(\\d+)/)) === null || _a === void 0 ? void 0 : _a[1]) || '1';\n            if (itemNameMatch in client.skillmanager.gathering.butchering.descriptionDictionary) {\n                const item = client.skillmanager.gathering.butchering.descriptionDictionary[itemNameMatch];\n                if (item) {\n                    client.systemservice.sendCommand(`inrift ${amount} ${item}`);\n                }\n            }\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Butchered",
                                            "enabled": true,
                                            "id": 26,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Skilfully, you butcher the corpse of [\\w\\W]+, separating flesh from bone with your cleaver and preparing (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+)\\.$"
                                        },
                                        {
                                            "type": "group",
                                            "items": [
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "(function () {\n        if (client.skillmanager.gathering.butchering.active) {\n            gag_current_line();\n            client.skillmanager.gathering.butchering.stop();\n        }\n    })(args);"
                                                        }
                                                    ],
                                                    "name": "Can't Butcher:0",
                                                    "enabled": true,
                                                    "id": 27,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^Butcher with what? Your fingernails\\?$"
                                                },
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "(function () {\n        if (client.skillmanager.gathering.butchering.active) {\n            gag_current_line();\n            client.skillmanager.gathering.butchering.stop();\n        }\n    })(args);"
                                                        }
                                                    ],
                                                    "name": "Can't Butcher:1",
                                                    "enabled": true,
                                                    "id": 28,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^Butcher what\\?$"
                                                },
                                                {
                                                    "type": "trigger",
                                                    "items": [],
                                                    "actions": [
                                                        {
                                                            "action": "script",
                                                            "script": "(function () {\n        if (client.skillmanager.gathering.butchering.active) {\n            gag_current_line();\n            client.skillmanager.gathering.butchering.stop();\n        }\n    })(args);"
                                                        }
                                                    ],
                                                    "name": "Can't Butcher:2",
                                                    "enabled": true,
                                                    "id": 29,
                                                    "matching": "regexp",
                                                    "whole_words": false,
                                                    "case_sensitive": false,
                                                    "text": "^You have no corpse suitable for butchering\\.$"
                                                }
                                            ],
                                            "actions": [],
                                            "name": "Can't Butcher",
                                            "enabled": true,
                                            "id": 30,
                                            "matching": "regexp"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Triggers",
                                    "enabled": true,
                                    "id": 32
                                }
                            ],
                            "actions": [],
                            "name": "Butchering",
                            "enabled": true,
                            "id": 35
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Gather:0",
                                            "enabled": true,
                                            "id": 6,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You carefully dig through the soft soil of the riverbed but are unable to find any suitable clay\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Gather:1",
                                            "enabled": true,
                                            "id": 7,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You carefully search the cracks and crevices of the surrounding rock, but find nothing\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Gather:2",
                                            "enabled": true,
                                            "id": 8,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Exactly where do you see farmland around here to gather from\\?"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Gather:3",
                                            "enabled": true,
                                            "id": 9,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You have already gathered from that plant recently\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Gather:4",
                                            "enabled": true,
                                            "id": 10,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^That plant has been fully harvested\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Gather:5",
                                            "enabled": true,
                                            "id": 11,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^What do you wish to harvest\\?"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Gather:6",
                                            "enabled": true,
                                            "id": 12,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^What would you like to gather\\?"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Gather:7",
                                            "enabled": true,
                                            "id": 13,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^This location will not yield \\w+\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Can't Gather",
                                    "enabled": true,
                                    "id": 14,
                                    "matching": "regexp"
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function (args) {\n        var _a;\n        if (client.skillmanager.collecting.active) {\n            const amountMatch = args[1] || '';\n            const itemNameMatch = args[2];\n            const amount = ((_a = amountMatch.match(/(\\d+)/)) === null || _a === void 0 ? void 0 : _a[1]) || '1';\n            if (itemNameMatch in client.skillmanager.gathering.descriptionDictionary) {\n                const item = client.skillmanager.gathering.descriptionDictionary[itemNameMatch];\n                if (item) {\n                    client.systemservice.sendCommand(`inrift ${amount} ${item}`);\n                }\n            }\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Gathered:0",
                                            "enabled": true,
                                            "id": 15,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You reach out and carefully harvest (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+)\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function (args) {\n        var _a;\n        if (client.skillmanager.collecting.active) {\n            const amountMatch = args[1] || '';\n            const itemNameMatch = args[2];\n            const amount = ((_a = amountMatch.match(/(\\d+)/)) === null || _a === void 0 ? void 0 : _a[1]) || '1';\n            if (itemNameMatch in client.skillmanager.gathering.descriptionDictionary) {\n                const item = client.skillmanager.gathering.descriptionDictionary[itemNameMatch];\n                if (item) {\n                    client.systemservice.sendCommand(`inrift ${amount} ${item}`);\n                }\n            }\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Gathered:1",
                                            "enabled": true,
                                            "id": 16,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Sifting through the soft riverbed with your fingers, you collect (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+)\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function (args) {\n        var _a;\n        if (client.skillmanager.collecting.active) {\n            const amountMatch = args[1] || '';\n            const itemNameMatch = args[2];\n            const amount = ((_a = amountMatch.match(/(\\d+)/)) === null || _a === void 0 ? void 0 : _a[1]) || '1';\n            if (itemNameMatch in client.skillmanager.gathering.descriptionDictionary) {\n                const item = client.skillmanager.gathering.descriptionDictionary[itemNameMatch];\n                if (item) {\n                    client.systemservice.sendCommand(`inrift ${amount} ${item}`);\n                }\n            }\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Gathered:2",
                                            "enabled": true,
                                            "id": 17,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Carefully scouring the nooks and crannies of the surrounding rock, you gather (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+)\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function (args) {\n        var _a;\n        if (client.skillmanager.collecting.active) {\n            const amountMatch = args[1] || '';\n            const itemNameMatch = args[2];\n            const amount = ((_a = amountMatch.match(/(\\d+)/)) === null || _a === void 0 ? void 0 : _a[1]) || '1';\n            if (itemNameMatch in client.skillmanager.gathering.descriptionDictionary) {\n                const item = client.skillmanager.gathering.descriptionDictionary[itemNameMatch];\n                if (item) {\n                    client.systemservice.sendCommand(`inrift ${amount} ${item}`);\n                }\n            }\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Gathered:3",
                                            "enabled": true,
                                            "id": 18,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You scour the farmland and find a rudimentary nest, from which you gather (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+)\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function (args) {\n        var _a;\n        if (client.skillmanager.collecting.active) {\n            const amountMatch = args[1] || '';\n            const itemNameMatch = args[2];\n            const amount = ((_a = amountMatch.match(/(\\d+)/)) === null || _a === void 0 ? void 0 : _a[1]) || '1';\n            if (itemNameMatch in client.skillmanager.gathering.descriptionDictionary) {\n                const item = client.skillmanager.gathering.descriptionDictionary[itemNameMatch];\n                if (item) {\n                    client.systemservice.sendCommand(`inrift ${amount} ${item}`);\n                }\n            }\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Gathered:4",
                                            "enabled": true,
                                            "id": 19,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^Using your acute sight, you examine the surrounding sea\\. You spot a sparkling patch of pure saltwater, free of impurities, and catch it in a tourmaline vial\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Gathered",
                                    "enabled": true,
                                    "id": 20,
                                    "matching": "regexp"
                                },
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function (args) {\n        var _a;\n        if (client.skillmanager.collecting.active) {\n            const amountMatch = args[1] || '';\n            const itemNameMatch = args[2];\n            const amount = ((_a = amountMatch.match(/(\\d+)/)) === null || _a === void 0 ? void 0 : _a[1]) || '1';\n            if (itemNameMatch in client.skillmanager.gathering.descriptionDictionary) {\n                const item = client.skillmanager.gathering.descriptionDictionary[itemNameMatch];\n                if (item) {\n                    client.systemservice.sendCommand(`inrift ${amount} ${item}`);\n                }\n            }\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Gathered Extra:0",
                                            "enabled": true,
                                            "id": 3,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^As you cleanse the clay in the riverwater, you discover (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+) hidden by the silt\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function (args) {\n        var _a;\n        if (client.skillmanager.collecting.active) {\n            const amountMatch = args[1] || '';\n            const itemNameMatch = args[2];\n            const amount = ((_a = amountMatch.match(/(\\d+)/)) === null || _a === void 0 ? void 0 : _a[1]) || '1';\n            if (itemNameMatch in client.skillmanager.gathering.descriptionDictionary) {\n                const item = client.skillmanager.gathering.descriptionDictionary[itemNameMatch];\n                if (item) {\n                    client.systemservice.sendCommand(`inrift ${amount} ${item}`);\n                }\n            }\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Gathered Extra:1",
                                            "enabled": true,
                                            "id": 4,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^With your keen eyes, you spot some additional edibles and you gather (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+) to supplement your collection\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Gathered Extra",
                                    "enabled": true,
                                    "id": 5,
                                    "matching": "regexp"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function (args) {\n        var _a;\n        if (client.skillmanager.collecting.active) {\n            const amountMatch = args[1] || '';\n            const itemNameMatch = args[2];\n            const amount = ((_a = amountMatch.match(/(\\d+)/)) === null || _a === void 0 ? void 0 : _a[1]) || '1';\n            if (itemNameMatch in client.skillmanager.gathering.descriptionDictionary) {\n                const item = client.skillmanager.gathering.descriptionDictionary[itemNameMatch];\n                if (item) {\n                    client.systemservice.sendCommand(`inrift ${amount} ${item}`);\n                }\n            }\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Gathered Milk",
                                    "enabled": true,
                                    "id": 21,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^Spotting a cow whose udder hangs low to the ground, you kneel beside her, gently coaxing her milk into [\\w\\W]+\\.$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function (args) {\n        var _a;\n        if (client.skillmanager.collecting.active) {\n            const amountMatch = args[1] || '';\n            const itemNameMatch = args[2];\n            const amount = ((_a = amountMatch.match(/(\\d+)/)) === null || _a === void 0 ? void 0 : _a[1]) || '1';\n            if (itemNameMatch in client.skillmanager.gathering.descriptionDictionary) {\n                const item = client.skillmanager.gathering.descriptionDictionary[itemNameMatch];\n                if (item) {\n                    client.systemservice.sendCommand(`inrift ${amount} ${item}`);\n                }\n            }\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Gathered Saltwater",
                                    "enabled": true,
                                    "id": 22,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^Using your acute sight, you examine the surrounding sea\\. You spot a sparkling patch of pure saltwater, free of impurities, and catch it in [\\w\\W]+\\.$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function (args) {\n        const item = args[1].trim().toLowerCase();\n        if (client.skillmanager.collecting.active && client.skillmanager.gathering.gatherables.includes(item)) {\n            gag_current_line();\n            client.skillmanager.collecting.queue.add(`gather ${item}`);\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Plants Plant",
                                    "enabled": true,
                                    "id": 23,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^(?:[\\w\\W]+) \\((\\w+)\\)\\s+(?:Plentiful|Abundant|Moderate|Sparse)$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n            setTimeout(() => {\n                client.skillmanager.collecting.waitingForPlants = false;\n                client.skillmanager.collecting.tryCollect();\n            });\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Plants Start",
                                    "enabled": true,
                                    "id": 24,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^The following plants are growing in this room:$"
                                }
                            ],
                            "actions": [],
                            "name": "Triggers",
                            "enabled": true,
                            "id": 25
                        }
                    ],
                    "actions": [],
                    "name": "Gathering",
                    "enabled": true,
                    "id": 36
                },
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Harvest:0",
                                            "enabled": true,
                                            "id": 37,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You carefully dig through the soft soil of the riverbed but are unable to find any suitable clay\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Harvest:1",
                                            "enabled": true,
                                            "id": 38,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You carefully search the cracks and crevices of the surrounding rock, but find nothing\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Harvest:2",
                                            "enabled": true,
                                            "id": 39,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You have already harvested from this plant recently\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Harvest:3",
                                            "enabled": true,
                                            "id": 40,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^That plant has been fully harvested\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Harvest:4",
                                            "enabled": true,
                                            "id": 41,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^What do you wish to harvest\\?"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Harvest:5",
                                            "enabled": true,
                                            "id": 42,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^What would you like to gather\\?"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Harvest:6",
                                            "enabled": true,
                                            "id": 43,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^This location will not yield \\w+\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Can't Harvest",
                                    "enabled": true,
                                    "id": 44,
                                    "matching": "regexp"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function (args) {\n        var _a;\n        if (client.skillmanager.collecting.active) {\n            const amountMatch = args[1] || '';\n            const itemNameMatch = args[2];\n            const amount = ((_a = amountMatch.match(/(\\d+)/)) === null || _a === void 0 ? void 0 : _a[1]) || '1';\n            if (itemNameMatch in client.skillmanager.harvesting.descriptionDictionary) {\n                const item = client.skillmanager.harvesting.descriptionDictionary[itemNameMatch];\n                if (item) {\n                    client.systemservice.sendCommand(`inrift ${amount} ${item}`);\n                }\n            }\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Harvested",
                                    "enabled": true,
                                    "id": 45,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^You reach out and carefully harvest (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+)\\.$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function (args) {\n        const item = args[1].trim().toLowerCase();\n        if (client.skillmanager.collecting.active && client.skillmanager.harvesting.harvestables.includes(item)) {\n            gag_current_line();\n            client.skillmanager.collecting.queue.add(`harvest ${item}`);\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Plants Plant",
                                    "enabled": true,
                                    "id": 46,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^(?:[\\w\\W]+) \\((\\w+)\\)\\s+(?:Plentiful|Abundant|Moderate|Sparse)$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n            setTimeout(() => {\n                client.skillmanager.collecting.waitingForPlants = false;\n                client.skillmanager.collecting.tryCollect();\n            });\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Plants Start",
                                    "enabled": true,
                                    "id": 47,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^The following plants are growing in this room:$"
                                }
                            ],
                            "actions": [],
                            "name": "Triggers",
                            "enabled": true,
                            "id": 48
                        }
                    ],
                    "actions": [],
                    "name": "Harvesting",
                    "enabled": true,
                    "id": 49
                },
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function () {\n        client.skillmanager.inkmilling.reset();\n        client.skillmanager.inkmilling.stop();\n    })(args);"
                                        }
                                    ],
                                    "name": "Mill Clear",
                                    "enabled": true,
                                    "id": 51,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "prefix_suffix": true,
                                    "text": "^mill clear$"
                                },
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function () {\n        client.skillmanager.inkmilling.stop();\n    })(args);"
                                        }
                                    ],
                                    "name": "Mill Stop",
                                    "enabled": true,
                                    "id": 52,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "prefix_suffix": true,
                                    "text": "^mill stop$"
                                },
                                {
                                    "type": "alias",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function (args) {\n        const amount = Number(args[1]);\n        const colour = args[2];\n        if (!(colour in client.skillmanager.inkmilling.queue)) {\n            client.skillmanager.error(`Unknown ink colour '${colour}'.`);\n            return;\n        }\n        if (!amount || amount < 0) {\n            client.skillmanager.error(`Unexpected amount '${amount}'.`);\n            return;\n        }\n        client.skillmanager.inkmilling.queue[colour] += amount;\n        const total = client.skillmanager.inkmilling.queue[colour];\n        client.skillmanager.echo(`Added %lightgray%${amount} ${colour} ${amount > 1 ? 'inks' : 'ink'}%end% to inkmilling queue, to make a total of %lightgray%${total} ${colour} ${total > 1 ? 'inks' : 'ink'}%end%.`);\n        if (!client.skillmanager.inkmilling.active) {\n            client.skillmanager.inkmilling.start();\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Mill",
                                    "enabled": true,
                                    "id": 50,
                                    "matching": "regexp",
                                    "whole_words": true,
                                    "case_sensitive": true,
                                    "prefix_suffix": true,
                                    "text": "^mill (\\d+) (\\w+)$"
                                }
                            ],
                            "actions": [],
                            "name": "Aliases",
                            "enabled": true,
                            "id": 53
                        },
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function () {\n        if (client.skillmanager.inkmilling.active) {\n            gag_current_line();\n            client.systemservice.sendCommand('get 50 reagent from mill|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent');\n            client.skillmanager.inkmilling.stop();\n            client.skillmanager.inkmilling.reset();\n            client.skillmanager.error('Ran out of reagents. Queue has been cleared.');\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Can't Mill",
                                    "enabled": true,
                                    "id": 56,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^Your mill does not hold the required amount of reagents to mill that\\.$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function () {\n        if (client.skillmanager.inkmilling.active) {\n            client.skillmanager.echo('Inkmilling failed!');\n            client.skillmanager.inkmilling.runningQueue = false;\n            client.skillmanager.inkmilling.runQueue();\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Mill Failed",
                                    "enabled": true,
                                    "id": 54,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^Lacking the rattle of a successful milling, you realise that you've done something wrong and spoiled the batch, which you empty onto the ground in disgust\\.$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function () {\n        if (client.skillmanager.inkmilling.active) {\n            client.systemservice.sendCommand(`get group ink from mill|get ink from mill|inrift all ink`);\n            client.skillmanager.inkmilling.runningQueue = false;\n            client.skillmanager.inkmilling.runQueue();\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Milled",
                                    "enabled": true,
                                    "id": 55,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^With a satisfying rattle, you note that the milling is complete as the fruit of your labours drops into the opening at the base of the mill\\.$"
                                }
                            ],
                            "actions": [],
                            "name": "Triggers",
                            "enabled": true,
                            "id": 57
                        }
                    ],
                    "actions": [],
                    "name": "Inkmilling",
                    "enabled": true,
                    "id": 58
                },
                {
                    "type": "group",
                    "items": [
                        {
                            "type": "group",
                            "items": [
                                {
                                    "type": "group",
                                    "items": [
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Extract:0",
                                            "enabled": true,
                                            "id": 59,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You carefully search the cracks and crevices of the surrounding rock, but find nothing\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Extract:1",
                                            "enabled": true,
                                            "id": 60,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^What do you wish to extract\\?"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Extract:2",
                                            "enabled": true,
                                            "id": 61,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^This location's extractable \\w+ has been exhausted\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Extract:3",
                                            "enabled": true,
                                            "id": 62,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^This location will not yield \\w+\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Extract:4",
                                            "enabled": true,
                                            "id": 63,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^You have already extracted minerals from this location\\.$"
                                        },
                                        {
                                            "type": "trigger",
                                            "items": [],
                                            "actions": [
                                                {
                                                    "action": "script",
                                                    "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n        }\n    })(args);"
                                                }
                                            ],
                                            "name": "Can't Extract:5",
                                            "enabled": true,
                                            "id": 64,
                                            "matching": "regexp",
                                            "whole_words": false,
                                            "case_sensitive": false,
                                            "text": "^The environment here will not yield any minerals\\.$"
                                        }
                                    ],
                                    "actions": [],
                                    "name": "Can't Extract",
                                    "enabled": true,
                                    "id": 65,
                                    "matching": "regexp"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function (args) {\n        var _a;\n        if (client.skillmanager.collecting.active) {\n            const amountMatch = args[1] || '';\n            const itemNameMatch = args[2];\n            const amount = ((_a = amountMatch.match(/(\\d+)/)) === null || _a === void 0 ? void 0 : _a[1]) || '1';\n            if (itemNameMatch in client.skillmanager.transmutation.descriptionDictionary) {\n                const item = client.skillmanager.transmutation.descriptionDictionary[itemNameMatch];\n                if (item) {\n                    client.systemservice.sendCommand(`inrift ${amount} ${item}`);\n                }\n            }\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Extracted",
                                    "enabled": true,
                                    "id": 66,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^You kneel and collect chunks of earth, using a strong\\-smelling solvent to pull (a group of \\d+ |an |a |some |\\d+ )?([\\w\\W]+) from the dirt and rock\\. This delicate process completed, you set the minerals aside to dry\\.$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function (args) {\n        const item = args[1].trim().toLowerCase();\n        if (client.skillmanager.collecting.active && client.skillmanager.transmutation.extractables.includes(item)) {\n            gag_current_line();\n            client.skillmanager.collecting.queue.add(`extract ${item}`);\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Minerals Mineral",
                                    "enabled": true,
                                    "id": 67,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^([\\w\\W]+)\\s+(?:Plentiful|Abundant|Moderate|Sparse)$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n            setTimeout(() => {\n                client.skillmanager.collecting.waitingForMinerals = false;\n                client.skillmanager.collecting.tryCollect();\n            });\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "Minerals Start",
                                    "enabled": true,
                                    "id": 68,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^You spot the following minerals here:$"
                                },
                                {
                                    "type": "trigger",
                                    "items": [],
                                    "actions": [
                                        {
                                            "action": "script",
                                            "script": "(function () {\n        if (client.skillmanager.collecting.active) {\n            gag_current_line();\n            setTimeout(() => {\n                client.skillmanager.collecting.waitingForMinerals = false;\n                client.skillmanager.collecting.tryCollect();\n            });\n        }\n    })(args);"
                                        }
                                    ],
                                    "name": "No Minerals",
                                    "enabled": true,
                                    "id": 69,
                                    "matching": "regexp",
                                    "whole_words": false,
                                    "case_sensitive": false,
                                    "text": "^There are no minerals here\\.$"
                                }
                            ],
                            "actions": [],
                            "name": "Triggers",
                            "enabled": true,
                            "id": 70
                        }
                    ],
                    "actions": [],
                    "name": "Transmutation",
                    "enabled": true,
                    "id": 71
                }
            ],
            "actions": [],
            "name": "Trade Skills",
            "enabled": true,
            "id": 76
        },
        {
            "type": "function",
            "items": [],
            "actions": [],
            "name": "onLoad",
            "enabled": true,
            "id": 2,
            "code": "(function () {\n    client.skillmanager = {\n        settings: client.systemservice.defaultsDeep(get_variable('skill-manager:settings'), {\n            enabled: true,\n            pranks: {\n                enabled: true\n            },\n            tarot: {\n                enabled: true\n            },\n            harvesting: {\n                enabled: true\n            },\n            transmutation: {\n                enabled: true\n            },\n            gathering: {\n                enabled: true\n            },\n            collecting: {\n                enabled: true\n            },\n            inkmilling: {\n                enabled: true\n            }\n        }),\n        pranks: {},\n        tarot: {\n            cards: [\n                'blank',\n                'sun',\n                'emperor',\n                'magician',\n                'priestess',\n                'fool',\n                'chariot',\n                'hermit',\n                'empress',\n                'lovers',\n                'hierophant',\n                'hangedman',\n                'tower',\n                'wheel',\n                'creator',\n                'justice',\n                'star',\n                'aeon',\n                'lust',\n                'universe',\n                'devil',\n                'moon',\n                'death'\n            ],\n            descriptionDictionary: {\n                'nothing': 'blank',\n                'Sun': 'sun',\n                'Emperor': 'emperor',\n                'Magician': 'magician',\n                'High Priestess': 'priestess',\n                'Fool': 'fool',\n                'Chariot': 'chariot',\n                'Hermit': 'hermit',\n                'Empress': 'empress',\n                'Lovers': 'lovers',\n                'Hierophant': 'hierophant',\n                'Hanged Man': 'hangedman',\n                'Tower': 'tower',\n                'Wheel of Fortune': 'wheel',\n                'Creator': 'creator',\n                'Justice': 'justice',\n                'Star': 'star',\n                'Aeon': 'aeon',\n                'Lust': 'lust',\n                'Universe': 'universe',\n                'Devil': 'devil',\n                'Moon': 'moon',\n                'Death': 'death'\n            },\n            inscribing: {\n                active: false,\n                runningQueue: false,\n                queue: {\n                    sun: 0,\n                    emperor: 0,\n                    magician: 0,\n                    priestess: 0,\n                    fool: 0,\n                    chariot: 0,\n                    hermit: 0,\n                    empress: 0,\n                    lovers: 0,\n                    hierophant: 0,\n                    hangedman: 0,\n                    tower: 0,\n                    wheel: 0,\n                    creator: 0,\n                    justice: 0,\n                    star: 0,\n                    aeon: 0,\n                    lust: 0,\n                    universe: 0,\n                    devil: 0,\n                    moon: 0,\n                    death: 0\n                },\n                start() {\n                    if (client.skillmanager.tarot.inscribing.active) {\n                        client.skillmanager.error('Already inscribing.');\n                        return;\n                    }\n                    client.skillmanager.tarot.inscribing.active = true;\n                    client.skillmanager.tarot.inscribing.runQueue();\n                    client.skillmanager.echo('Started inscribing.');\n                },\n                stop() {\n                    if (!client.skillmanager.tarot.inscribing.active) {\n                        client.skillmanager.error('Already not inscribing.');\n                        return;\n                    }\n                    client.skillmanager.tarot.inscribing.active = false;\n                    client.skillmanager.tarot.inscribing.runningQueue = false;\n                    client.skillmanager.echo('Stopped inscribing.');\n                },\n                reset() {\n                    client.skillmanager.tarot.inscribing.queue = {\n                        sun: 0,\n                        emperor: 0,\n                        magician: 0,\n                        priestess: 0,\n                        fool: 0,\n                        chariot: 0,\n                        hermit: 0,\n                        empress: 0,\n                        lovers: 0,\n                        hierophant: 0,\n                        hangedman: 0,\n                        tower: 0,\n                        wheel: 0,\n                        creator: 0,\n                        justice: 0,\n                        star: 0,\n                        aeon: 0,\n                        lust: 0,\n                        universe: 0,\n                        devil: 0,\n                        moon: 0,\n                        death: 0\n                    };\n                    client.skillmanager.echo('Reset inscribing queue.');\n                },\n                runQueue() {\n                    if (!client.skillmanager.tarot.inscribing.active) {\n                        return;\n                    }\n                    if (client.skillmanager.tarot.inscribing.runningQueue) {\n                        return;\n                    }\n                    client.skillmanager.tarot.inscribing.runningQueue = true;\n                    let card;\n                    for (const queueCard in client.skillmanager.tarot.inscribing.queue) {\n                        if (client.skillmanager.tarot.inscribing.queue[queueCard] > 0) {\n                            card = queueCard;\n                            break;\n                        }\n                    }\n                    if (!card) {\n                        client.skillmanager.tarot.inscribing.stop();\n                        return;\n                    }\n                    client.queuemanager.appendCommand('outd blank');\n                    client.queuemanager.appendCommand(`inscribe blank with ${card}`);\n                }\n            }\n        },\n        harvesting: {\n            harvestables: [\n                'bayberry',\n                'bellwort',\n                'burdock',\n                'cohosh',\n                'bloodroot',\n                'echinacea',\n                'ginger',\n                'ginseng',\n                'goldenseal',\n                'hawthorn',\n                'moss',\n                'kelp',\n                'kola',\n                'kuzu',\n                'slipper',\n                'myrrh',\n                'lobelia',\n                'ash',\n                'sac',\n                'sileris',\n                'skin',\n                'skullcap',\n                'elm',\n                'valerian',\n                'weed',\n                'pear'\n            ],\n            descriptionDictionary: {\n                'bayberry bark': 'bayberry',\n                'pieces of bayberry bark': 'bayberry',\n                'bellwort flower': 'bellwort',\n                'bellwort flowers': 'bellwort',\n                'dark burdock root': 'burdock',\n                'burdock roots': 'burdock',\n                'black cohosh root': 'cohosh',\n                'cohosh roots': 'cohosh',\n                'bloodroot leaf': 'bloodroot',\n                'bloodroot leaves': 'bloodroot',\n                'echinacea root': 'echinacea',\n                'echinacea roots': 'echinacea',\n                'ginger root': 'ginger',\n                'ginger roots': 'ginger',\n                'ginseng root': 'ginseng',\n                'ginseng roots': 'ginseng',\n                'goldenseal root': 'goldenseal',\n                'goldenseal roots': 'goldenseal',\n                'hawthorn berry': 'hawthorn',\n                'hawthorn berries': 'hawthorn',\n                'irid moss': 'moss',\n                'pieces of irid moss': 'moss',\n                'piece of kelp': 'kelp',\n                'pieces of kelp': 'kelp',\n                'kola nut': 'kola',\n                'kola nuts': 'kola',\n                'kuzu root': 'kuzu',\n                'kuzu roots': 'kuzu',\n                'lady\\'s slipper root': 'slipper',\n                'lady\\'s slipper roots': 'slipper',\n                'ball of myrrh gum': 'myrrh',\n                'myrrh balls': 'myrrh',\n                'lobelia seed': 'lobelia',\n                'lobelia seeds': 'lobelia',\n                'prickly ash bark': 'ash',\n                'pieces of prickly ash bark': 'ash',\n                'venom sac': 'sac',\n                'venom sacs': 'sac',\n                'sileris berry': 'sileris',\n                'sileris berries': 'sileris',\n                'sidewinder skin': 'skin',\n                'sidewinder skins': 'skin',\n                'skullcap flower': 'skullcap',\n                'skullcap flowers': 'skullcap',\n                'slippery elm': 'elm',\n                'slippery elms': 'elm',\n                'valerian leaf': 'valerian',\n                'valerian leaves': 'valerian',\n                'sprig of cactus weed': 'weed',\n                'sprigs of cactus weed': 'weed',\n                'prickly pear': 'pear',\n                'prickly pears': 'pear'\n            }\n        },\n        transmutation: {\n            extractables: [\n                'antimony',\n                'argentum',\n                'arsenic',\n                'aurum',\n                'azurite',\n                'bisemutum',\n                'calamine',\n                'calcite',\n                'cinnabar',\n                'cuprum',\n                'dolomite',\n                'ferrum',\n                'gypsum',\n                'magnesium',\n                'malachite',\n                'plumbum',\n                'potash',\n                'quartz',\n                'quicksilver',\n                'realgar',\n                'stannum'\n            ],\n            descriptionDictionary: {\n                'antimony flake': 'antimony',\n                'antimony flakes': 'antimony',\n                'argentum flake': 'argentum',\n                'argentum flakes': 'argentum',\n                'arsenic pellet': 'arsenic',\n                'arsenic pellets': 'arsenic',\n                'aurum flake': 'aurum',\n                'aurum flakes': 'aurum',\n                'azurite mote': 'azurite',\n                'azurite motes': 'azurite',\n                'bisemutum chip': 'bisemutum',\n                'bisemutum chips': 'bisemutum',\n                'calamine crystal': 'calamine',\n                'calamine crystals': 'calamine',\n                'calcite mote': 'calcite',\n                'calcite motes': 'calcite',\n                'pinch of ground cinnabar': 'cinnabar',\n                'pinches of ground cinnabar': 'cinnabar',\n                'cuprum flake': 'cuprum',\n                'cuprum flakes': 'cuprum',\n                'dolomite grain': 'dolomite',\n                'dolomite grains': 'dolomite',\n                'ferrum flake': 'ferrum',\n                'ferrum flakes': 'ferrum',\n                'gypsum crystal': 'gypsum',\n                'gypsum crystals': 'gypsum',\n                'magnesium chip': 'magnesium',\n                'magnesium chips': 'magnesium',\n                'pinch of ground malachite': 'malachite',\n                'pinches of ground malachite': 'malachite',\n                'plumbum flake': 'plumbum',\n                'plumbum flakes': 'plumbum',\n                'potash crystal': 'potash',\n                'potash crystals': 'potash',\n                'quartz grain': 'quartz',\n                'quartz grains': 'quartz',\n                'quicksilver droplet': 'quicksilver',\n                'quicksilver droplets': 'quicksilver',\n                'pinch of realgar crystals': 'realgar',\n                'pinches of ground realgar': 'realgar',\n                'stannum flake': 'stannum',\n                'stannum flakes': 'stannum'\n            }\n        },\n        gathering: {\n            butchering: {\n                active: false,\n                descriptionDictionary: {\n                    'piece of buffalo horn': 'buffalohorn',\n                    'pieces of buffalo horn': 'buffalohorn',\n                    'pile of fish scales': 'scales',\n                    'piles of fish scales': 'scales',\n                    'pile of gold flakes': 'flakes',\n                    'piles of gold flakes': 'flakes',\n                    'an ink bladder': 'bladder',\n                    'ink bladders': 'bladder',\n                    'sliver of red scorpion chitin': 'redchitin',\n                    'slivers of red chitin': 'redchitin',\n                    'sliver of yellow scorpion chitin': 'yellowchitin',\n                    'slivers of yellow chitin': 'yellowchitin',\n                    'lump of red clay': 'clay',\n                    'lumps of red clay': 'clay',\n                    'shark tooth': 'tooth',\n                    'shark teeth': 'tooth',\n                    'wyrm tongue': 'tongue',\n                    'wyrm tongues': 'tongue',\n                    'chunk of animal fat': 'fat',\n                    'chunks of animal fat': 'fat',\n                    'fillet of fish': 'fish',\n                    'pieces of fish': 'fish',\n                    'tender cut of meat': 'meat',\n                    'pieces of meat': 'meat',\n                    'poultry breast': 'poultry',\n                    'pieces of poultry': 'poultry',\n                    'unprocessed animal skin': 'skin',\n                    'skins': 'skin'\n                },\n                start() {\n                    if (client.skillmanager.gathering.butchering.active) {\n                        client.skillmanager.error('Already butchering.');\n                        return;\n                    }\n                    const corpses = client.gmcpservice.items.inv.filter(value => value.name.startsWith('the corpse of'));\n                    if (corpses.length === 0) {\n                        client.skillmanager.error(`You have no corpses.`);\n                        return;\n                    }\n                    if (client.inventorymanager.settings.wielding.expectedLeftId) {\n                        client.skillmanager.gathering.butchering.itemToRewield = client.inventorymanager.settings.wielding.expectedLeftId;\n                    }\n                    client.inventorymanager.wield('cleaver', 'left');\n                    client.skillmanager.gathering.butchering.active = true;\n                    client.skillmanager.gathering.butchering.butcher();\n                    client.skillmanager.echo('Started butchering.');\n                },\n                stop() {\n                    if (!client.skillmanager.gathering.butchering.active) {\n                        client.skillmanager.error('Already not butchering.');\n                        return;\n                    }\n                    client.skillmanager.gathering.butchering.active = false;\n                    if (client.skillmanager.gathering.butchering.itemToRewield) {\n                        client.inventorymanager.wield(client.skillmanager.gathering.butchering.itemToRewield, 'left');\n                    }\n                    else {\n                        client.inventorymanager.unwield('cleaver');\n                    }\n                    client.skillmanager.echo('Stopped butchering.');\n                },\n                butcher() {\n                    if (client.skillmanager.gathering.butchering.active) {\n                        client.queuemanager.appendCommand('butcher corpse for reagent', 'equilibriumBalance', 'balance');\n                    }\n                }\n            },\n            gatherables: [\n                'vegetable',\n                'clay',\n                'fruit',\n                'grain',\n                'egg',\n                'nut',\n                'olive',\n                'sugarcane',\n                'lumic',\n                'cacao',\n                'dust',\n                'goldbar',\n                'seed',\n                'goldflakes',\n                'milk',\n                'saltwater'\n            ],\n            environmentDictionary: {\n                'Forest': ['nut'],\n                'Garden': ['fruit', 'vegetable'],\n                'Grasslands': ['sugarcane', 'grain', 'from farm'],\n                'Jungle': ['fruit', 'cacao'],\n                'Natural underground': ['lumic', 'dust'],\n                'Valley': ['olive'],\n                'River': ['clay'],\n                'Ocean': ['saltwater']\n            },\n            descriptionDictionary: {\n                'assortment of vegetables': 'vegetable',\n                'vegetables': 'vegetable',\n                'lump of red clay': 'clay',\n                'lumps of red clay': 'clay',\n                'handful of fruits': 'fruit',\n                'pieces of fruit': 'fruit',\n                'handful of grain': 'grain',\n                'handfuls of grain': 'grain',\n                'small brown egg': 'egg',\n                'eggs': 'egg',\n                'handful of nuts': 'nut',\n                'handfuls of nuts': 'nut',\n                'cluster of olives': 'olive',\n                'large, green olives': 'olive',\n                'raw sugarcane stick': 'sugarcane',\n                'sticks of sugarcane': 'sugarcane',\n                'small patch of lumic moss': 'lumic',\n                'patches of lumic moss': 'lumic',\n                'cacao pod': 'cacao',\n                'cacao pods': 'cacao',\n                'pinch of diamond dust': 'dust',\n                'pinches of diamond dust': 'dust',\n                'bar of gold': 'goldbar',\n                'gold bars': 'goldbar',\n                'handfuls of seeds': 'seed',\n                'handful of seeds': 'seed',\n                'piles of gold flakes': 'goldflakes',\n                'pile of gold flakes': 'goldflakes',\n                'sip of milk': 'milk',\n                'sips of milk': 'milk',\n                'sip of saltwater': 'saltwater',\n                'sips of saltwater': 'saltwater'\n            },\n            getGatherables() {\n                return client.skillmanager.gathering.environmentDictionary[client.gmcpservice.room.environment] || [];\n            }\n        },\n        collecting: {\n            active: false,\n            automatic: false,\n            waitingForPlants: false,\n            waitingForMinerals: false,\n            queue: new Set(),\n            start() {\n                if (client.skillmanager.collecting.active) {\n                    client.skillmanager.error('Already collecting.');\n                    return;\n                }\n                client.skillmanager.collecting.active = true;\n                client.skillmanager.collecting.waitingForPlants = true;\n                client.skillmanager.collecting.waitingForMinerals = true;\n                client.skillmanager.gathering.getGatherables().forEach(value => {\n                    client.skillmanager.collecting.queue.add(`gather ${value}`);\n                });\n                client.queuemanager.appendCommand('plants');\n                client.queuemanager.appendCommand('minerals');\n                client.skillmanager.echo('Started collecting.');\n            },\n            stop() {\n                if (!client.skillmanager.collecting.active) {\n                    client.skillmanager.error('Already not collecting.');\n                    return;\n                }\n                client.skillmanager.collecting.active = false;\n                client.skillmanager.collecting.waitingForPlants = false;\n                client.skillmanager.collecting.waitingForMinerals = false;\n                client.skillmanager.echo('Stopped collecting.');\n            },\n            clear() {\n                client.skillmanager.collecting.queue.clear();\n                client.skillmanager.echo('Reset collecting queue.');\n            },\n            collect() {\n                if (!client.skillmanager.collecting.active) {\n                    return;\n                }\n                if (client.skillmanager.collecting.queue.size === 0) {\n                    // Delay so last command can call inrift\n                    setTimeout(() => {\n                        client.skillmanager.collecting.stop();\n                    });\n                    return;\n                }\n                client.skillmanager.collecting.queue.forEach(value => {\n                    client.queuemanager.appendCommand(value, 'equilibriumBalance', 'balance');\n                });\n                client.skillmanager.collecting.queue.clear();\n            },\n            tryCollect() {\n                if (client.skillmanager.collecting.active && !client.skillmanager.collecting.waitingForPlants && !client.skillmanager.collecting.waitingForMinerals) {\n                    client.skillmanager.collecting.collect();\n                }\n            }\n        },\n        inkmilling: {\n            active: false,\n            runningQueue: false,\n            queue: {\n                red: 0,\n                blue: 0,\n                yellow: 0,\n                green: 0,\n                purple: 0,\n                gold: 0,\n                black: 0\n            },\n            reagents: {\n                red: ['redclay', 'redchitin'],\n                blue: ['inkbladder', 'lumic'],\n                yellow: ['yellowchitin'],\n                gold: ['goldflakes'],\n                common: ['fishscales'],\n                uncommon: ['buffalohorn'],\n                scarce: ['sharktooth'],\n                rare: ['wyrmtongue']\n            },\n            inks: {\n                red: {\n                    red: 1,\n                    common: 1\n                },\n                blue: {\n                    blue: 1,\n                    uncommon: 1\n                },\n                yellow: {\n                    yellow: 1,\n                    scarce: 1\n                },\n                green: {\n                    blue: 2,\n                    yellow: 1,\n                    uncommon: 2,\n                    scarce: 1\n                },\n                purple: {\n                    red: 2,\n                    blue: 2,\n                    common: 2,\n                    uncommon: 2,\n                    rare: 1\n                },\n                gold: {\n                    gold: 1,\n                    common: 2,\n                    uncommon: 2,\n                    scarce: 2,\n                    rare: 1\n                },\n                black: {\n                    red: 1,\n                    blue: 1,\n                    yellow: 1,\n                    gold: 1,\n                    common: 2,\n                    uncommon: 2,\n                    scarce: 2,\n                    rare: 3\n                }\n            },\n            descriptionDictionary: {\n                'red ink': 'redink',\n                'red inks': 'redink',\n                'blue ink': 'blueink',\n                'blue inks': 'blueink',\n                'yellow ink': 'yellowink',\n                'yellow inks': 'yellowink',\n                'green ink': 'greenink',\n                'green inks': 'greenink',\n                'purple ink': 'purpleink',\n                'purple inks': 'purpleink',\n                'gold ink': 'goldink',\n                'gold inks': 'goldink',\n                'black ink': 'blackink',\n                'black inks': 'blackink'\n            },\n            start() {\n                if (client.skillmanager.inkmilling.active) {\n                    client.skillmanager.error('Already milling.');\n                    return;\n                }\n                client.skillmanager.inkmilling.active = true;\n                client.skillmanager.inkmilling.runQueue();\n                client.skillmanager.echo('Started milling.');\n            },\n            stop() {\n                if (!client.skillmanager.inkmilling.active) {\n                    client.skillmanager.error('Already not milling.');\n                    return;\n                }\n                client.skillmanager.inkmilling.active = false;\n                client.skillmanager.inkmilling.runningQueue = false;\n                client.skillmanager.echo('Stopped milling.');\n            },\n            reset() {\n                client.skillmanager.inkmilling.queue = {\n                    red: 0,\n                    blue: 0,\n                    yellow: 0,\n                    green: 0,\n                    purple: 0,\n                    gold: 0,\n                    black: 0\n                };\n                client.skillmanager.echo('Reset milling queue.');\n            },\n            runQueue() {\n                if (!client.skillmanager.inkmilling.active) {\n                    return;\n                }\n                if (client.skillmanager.inkmilling.runningQueue) {\n                    return;\n                }\n                client.skillmanager.inkmilling.runningQueue = true;\n                let inkColour;\n                for (const queueInkColour in client.skillmanager.inkmilling.queue) {\n                    if (client.skillmanager.inkmilling.queue[queueInkColour] > 0) {\n                        inkColour = queueInkColour;\n                        break;\n                    }\n                }\n                if (!inkColour) {\n                    client.skillmanager.inkmilling.stop();\n                    return;\n                }\n                // client.skillmanager.echo(`Inkmilling Queue: ${client.skillmanager.inkmilling.queue.join(', ')}`);\n                const queuedAmount = client.skillmanager.inkmilling.queue[inkColour];\n                const amount = 5 > queuedAmount ? queuedAmount : 5;\n                const inkReagents = client.skillmanager.inkmilling.inks[inkColour];\n                const outriftCommands = [];\n                const putInMillCommands = [];\n                for (let inkReagent in inkReagents) {\n                    const reagentAmount = amount * inkReagents[inkReagent];\n                    const reagents = client.skillmanager.inkmilling.reagents[inkReagent];\n                    const reagent = reagents.find(value => {\n                        var _a;\n                        return Number((_a = client.gmcpservice.rift[value]) === null || _a === void 0 ? void 0 : _a.amount) >= reagentAmount;\n                    });\n                    if (reagent === undefined) {\n                        client.skillmanager.inkmilling.queue[inkColour] = 0;\n                        client.skillmanager.inkmilling.runningQueue = false;\n                        client.systemservice.sendCommand('get 50 reagent from mill|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent|inr 50 reagent');\n                        client.skillmanager.error(`Ran out of ${reagents.join(' and ')}. Queue for ${inkColour} has been cleared.`);\n                        client.skillmanager.inkmilling.runQueue();\n                        return;\n                    }\n                    if (reagentAmount === 1) {\n                        outriftCommands.push(`outrift ${reagent}`);\n                        putInMillCommands.push(`put ${reagent} in mill`);\n                    }\n                    else {\n                        outriftCommands.push(`outrift ${reagentAmount} ${reagent}`);\n                        putInMillCommands.push(`put group ${reagent} in mill`);\n                    }\n                }\n                client.systemservice.sendCommands(outriftCommands);\n                client.systemservice.sendCommands(putInMillCommands);\n                client.systemservice.sendCommand(`mill for ${amount} ${inkColour}`);\n                client.skillmanager.inkmilling.queue[inkColour] -= amount;\n            }\n        },\n        echo(text) {\n            client.displayservice.echo(`%lightgray%[%deepskyblue%Skill Manager%end%]:%end% ${client.displayservice.colorify(text)}`);\n        },\n        error(text) {\n            client.skillmanager.echo(`%red%${text}`);\n        },\n        save() {\n            client.systemservice.save('skill-manager', () => {\n                set_variable('skil-manager:settings', client.skillmanager.settings);\n                client.skillmanager.echo('Settings saved.');\n            });\n        }\n    };\n    client.gmcpservice.subscribe(['Room.Info'], () => {\n        if (client.skillmanager.collecting.active) {\n            if (client.gmcpservice.previousRoom.num !== client.gmcpservice.room.num) {\n                // Delay stopping so the last collect can call inrift\n                setTimeout(() => {\n                    client.skillmanager.collecting.stop();\n                });\n            }\n        }\n        if (client.skillmanager.collecting.automatic) {\n            // Delay starting so collecting starts after it stops\n            setTimeout(() => {\n                client.skillmanager.collecting.start();\n            });\n        }\n    });\n    client.queuemanager.subscribe(['balance', 'equilibrium', 'equilibriumBalance'], (_queue, method, _args) => {\n        if (client.skillmanager.gathering.butchering.active) {\n            // TODO: Confirm we were actually butchering\n            if (method === 'run') {\n                client.skillmanager.gathering.butchering.butcher();\n            }\n        }\n        if (client.skillmanager.collecting.active) {\n            // TODO: Confirm we were actually collecting\n            if (method === 'run' && client.queuemanager.equilibriumBalance.queue.length === 0) {\n                // Delay stopping so the last collect can call inrift\n                setTimeout(() => {\n                    client.skillmanager.collecting.stop();\n                });\n            }\n        }\n    });\n    client.skillmanager.echo('Loaded.');\n})(args);"
        }
    ],
    "actions": [],
    "name": "Skill Manager",
    "enabled": true,
    "id": 1,
    "description": "A Skill Manager"
}